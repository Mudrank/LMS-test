{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import createHandler from\"./createHandler\";import{baseProps}from\"./gestureHandlers\";export var nativeViewProps=[].concat(_toConsumableArray(baseProps),['shouldActivateOnStart','disallowInterruption']);export var NativeViewGestureHandler=createHandler({name:'NativeViewGestureHandler',allowedProps:nativeViewProps,config:{}});","map":{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["nativeViewProps","NativeViewGestureHandler","createHandler","name","allowedProps","config"],"mappings":"yEAAA,MAAA,CAAA,aAAA,uBACA,OAAA,SAAA,yBAYA,MAAO,IAAMA,CAAAA,eAAe,8BAAG,SAAH,GAAG,uBAAH,CAArB,sBAAqB,EAArB,CAQP,MAAO,IAAMC,CAAAA,wBAAwB,CAAGC,aAAa,CAGnD,CACAC,IAAI,CADJ,0BAAA,CAEAC,YAAY,CAFZ,eAAA,CAGAC,MAAM,CAAE,EAHR,CAHmD,CAA9C","sourcesContent":["import createHandler from './createHandler';\nimport { BaseGestureHandlerProps, baseProps } from './gestureHandlers';\n\nexport interface NativeViewGestureHandlerProps\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload> {\n  shouldActivateOnStart?: boolean;\n  disallowInterruption?: boolean;\n}\n\nexport type NativeViewGestureHandlerPayload = {\n  pointerInside: boolean;\n};\n\nexport const nativeViewProps = [\n  ...baseProps,\n  'shouldActivateOnStart',\n  'disallowInterruption',\n] as const;\n\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlers.ts file\nexport const NativeViewGestureHandler = createHandler<\n  NativeViewGestureHandlerProps,\n  NativeViewGestureHandlerPayload\n>({\n  name: 'NativeViewGestureHandler',\n  allowedProps: nativeViewProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"module"}