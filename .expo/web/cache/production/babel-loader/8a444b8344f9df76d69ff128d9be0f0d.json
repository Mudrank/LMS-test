{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import DeviceEventEmitter from\"react-native-web/dist/exports/DeviceEventEmitter\";import{RCTEventEmitter}from\"./nativeEmitters\";var SyntheticPlatformEmitter=function(){function SyntheticPlatformEmitter(){_classCallCheck(this,SyntheticPlatformEmitter);this._emitter=new RCTEventEmitter(DeviceEventEmitter.sharedSubscriber);}_createClass(SyntheticPlatformEmitter,[{key:\"emit\",value:function emit(eventName,props){this._emitter.emit(eventName,props);}}]);return SyntheticPlatformEmitter;}();export default new SyntheticPlatformEmitter();","map":{"version":3,"sources":["../src/SyntheticPlatformEmitter.ts"],"names":[],"mappings":"iNAEA,OAAS,eAAT,wB,GAMM,CAAA,wB,YAAN,mCAAA,gDACE,KAAA,QAAA,CAAW,GAAI,CAAA,eAAJ,CAAoB,kBAAkB,CAAC,gBAAvC,CAAX,CAKD,C,yDAHC,cAAK,SAAL,CAAwB,KAAxB,CAAkC,CAChC,KAAK,QAAL,CAAc,IAAd,CAAmB,SAAnB,CAA8B,KAA9B,EACD,C,wCAGH,cAAe,IAAI,CAAA,wBAAJ,EAAf","sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\nimport { RCTEventEmitter } from './nativeEmitters';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(DeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}