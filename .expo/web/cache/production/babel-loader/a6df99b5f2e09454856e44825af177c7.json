{"ast":null,"code":"export default function getEventManager(target){var listeners={};var removeListener=function removeListener(type,callback){var callbacks=listeners[type]?listeners[type][target]:undefined;if(!callbacks){return;}var index=callbacks.indexOf(callback);callbacks.splice(index,1);};var addListener=function addListener(type,callback){listeners[type]=listeners[type]||{};listeners[type][target]=listeners[type][target]||[];listeners[type][target].push(callback);return{remove:function remove(){return removeListener(type,callback);}};};return{addListener:addListener,emit:function emit(type,data){var items=listeners[type]||{};var callbacks=items[target]&&items[target].slice();callbacks===null||callbacks===void 0?void 0:callbacks.forEach(function(cb){return cb(data);});}};}","map":{"version":3,"sources":["getEventManager.js"],"names":["listeners","removeListener","callbacks","index","addListener","remove","emit","items","cb"],"mappings":"AAKA,cAAe,SAAA,CAAA,eAAA,CAAA,MAAA,CAAiC,CAI9C,GAAMA,CAAAA,SAAS,CAAf,EAAA,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAA,IAAA,CAAA,QAAA,CAAoB,CACzC,GAAMC,CAAAA,SAAS,CAAGF,SAAS,CAATA,IAAS,CAATA,CAAkBA,SAAS,CAATA,IAAS,CAATA,CAAlBA,MAAkBA,CAAlBA,CAAlB,SAAA,CAEA,GAAI,CAAJ,SAAA,CAAgB,CACd,OACD,CAED,GAAMG,CAAAA,KAAK,CAAGD,SAAS,CAATA,OAAAA,CAAd,QAAcA,CAAd,CAEAA,SAAS,CAATA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EATF,CAAA,CAgBA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,IAAA,CAAA,QAAA,CAAoB,CACtCJ,SAAS,CAATA,IAAS,CAATA,CAAkBA,SAAS,CAATA,IAAS,CAATA,EAAlBA,EAAAA,CACAA,SAAS,CAATA,IAAS,CAATA,CAAAA,MAAAA,EAA0BA,SAAS,CAATA,IAAS,CAATA,CAAAA,MAAAA,GAA1BA,EAAAA,CACAA,SAAS,CAATA,IAAS,CAATA,CAAAA,MAAAA,EAAAA,IAAAA,CAAAA,QAAAA,EAEA,MAAO,CACLK,MAAM,CAAE,wBAAMJ,CAAAA,cAAc,CAAA,IAAA,CAAA,QAAA,CAApB,EADH,CAAP,CALF,CAAA,CAUA,MAAO,CACLG,WADK,CACLA,WADK,CAOLE,IAAI,CAAE,cAAA,IAAA,CAAA,IAAA,CAAgB,CACpB,GAAMC,CAAAA,KAAK,CAAGP,SAAS,CAATA,IAAS,CAATA,EAAd,EAAA,CAMA,GAAME,CAAAA,SAAS,CAAGK,KAAK,CAALA,MAAK,CAALA,EAAiBA,KAAK,CAALA,MAAK,CAALA,CAAnC,KAAmCA,EAAnC,CAEAL,SAAS,GAATA,IAAAA,EAAAA,SAAS,GAAA,IAATA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,SAAS,CAATA,OAAAA,CAAoBM,SAAAA,EAAD,QAAQA,CAAAA,EAAE,CAA7BN,IAA6B,CAAV,EAAnBA,CAAAA,CACD,CAjBI,CAAP,CAmBD","sourcesContent":["// @ts-check\n\n/**\n * @param {string} target\n */\nexport default function getEventManager(target) {\n  /**\n   * @type {Record<string, Record<string, ((e: any) => void)[]>>}\n   */\n  const listeners = {};\n\n  /**\n   * @param {string} type\n   * @param {() => void} callback\n   */\n  const removeListener = (type, callback) => {\n    const callbacks = listeners[type] ? listeners[type][target] : undefined;\n\n    if (!callbacks) {\n      return;\n    }\n\n    const index = callbacks.indexOf(callback);\n\n    callbacks.splice(index, 1);\n  };\n\n  /**\n   * @param {string} type\n   * @param {() => void} callback\n   */\n  const addListener = (type, callback) => {\n    listeners[type] = listeners[type] || {};\n    listeners[type][target] = listeners[type][target] || [];\n    listeners[type][target].push(callback);\n\n    return {\n      remove: () => removeListener(type, callback),\n    };\n  };\n\n  return {\n    addListener,\n\n    /**\n     * @param {string} type\n     * @param {any} [data]\n     */\n    emit: (type, data) => {\n      const items = listeners[type] || {};\n\n      /**\n       * Copy the current list of callbacks in case they are mutated during execution\n       * @type {((data: any) => void)[] | undefined}\n       */\n      const callbacks = items[target] && items[target].slice();\n\n      callbacks?.forEach((cb) => cb(data));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}