{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{UnavailabilityError}from'@unimodules/core';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{PermissionStatus}from'unimodules-permissions-interface';import ExpoBarCodeScannerModule from\"./ExpoBarCodeScannerModule\";import ExpoBarCodeScannerView from\"./ExpoBarCodeScannerView\";var BarCodeType=ExpoBarCodeScannerModule.BarCodeType,Type=ExpoBarCodeScannerModule.Type;var EVENT_THROTTLE_MS=500;export{PermissionStatus};export var BarCodeScanner=function(_React$Component){_inherits(BarCodeScanner,_React$Component);var _super=_createSuper(BarCodeScanner);function BarCodeScanner(){var _this;_classCallCheck(this,BarCodeScanner);_this=_super.apply(this,arguments);_this.lastEvents={};_this.lastEventsTimes={};_this.onObjectDetected=function(callback){return function(_ref){var nativeEvent=_ref.nativeEvent;var type=nativeEvent.type;if(_this.lastEvents[type]&&_this.lastEventsTimes[type]&&JSON.stringify(nativeEvent)===_this.lastEvents[type]&&Date.now()-_this.lastEventsTimes[type]<EVENT_THROTTLE_MS){return;}if(callback){callback(nativeEvent);_this.lastEventsTimes[type]=new Date();_this.lastEvents[type]=JSON.stringify(nativeEvent);}};};return _this;}_createClass(BarCodeScanner,[{key:\"render\",value:function render(){var nativeProps=this.convertNativeProps(this.props);var onBarCodeScanned=this.props.onBarCodeScanned;return React.createElement(ExpoBarCodeScannerView,_extends({},nativeProps,{onBarCodeScanned:this.onObjectDetected(onBarCodeScanned)}));}},{key:\"convertNativeProps\",value:function convertNativeProps(props){var nativeProps={};for(var _i=0,_Object$entries=Object.entries(props);_i<_Object$entries.length;_i++){var _ref2=_Object$entries[_i];var _ref3=_slicedToArray(_ref2,2);var key=_ref3[0];var value=_ref3[1];if(typeof value==='string'&&BarCodeScanner.ConversionTables[key]){nativeProps[key]=BarCodeScanner.ConversionTables[key][value];}else{nativeProps[key]=value;}}return nativeProps;}}],[{key:\"getPermissionsAsync\",value:function getPermissionsAsync(){return _regeneratorRuntime.async(function getPermissionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",ExpoBarCodeScannerModule.getPermissionsAsync());case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);}},{key:\"requestPermissionsAsync\",value:function requestPermissionsAsync(){return _regeneratorRuntime.async(function requestPermissionsAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",ExpoBarCodeScannerModule.requestPermissionsAsync());case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}},{key:\"scanFromURLAsync\",value:function scanFromURLAsync(url){var barCodeTypes,_args3=arguments;return _regeneratorRuntime.async(function scanFromURLAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:barCodeTypes=_args3.length>1&&_args3[1]!==undefined?_args3[1]:Object.values(BarCodeType);if(ExpoBarCodeScannerModule.scanFromURLAsync){_context3.next=3;break;}throw new UnavailabilityError('expo-barcode-scanner','scanFromURLAsync');case 3:if(!(Array.isArray(barCodeTypes)&&!barCodeTypes.length)){_context3.next=5;break;}throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');case 5:if(!(Platform.OS==='ios')){_context3.next=11;break;}if(!(Array.isArray(barCodeTypes)&&!barCodeTypes.includes(BarCodeType.qr))){_context3.next=8;break;}throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');case 8:_context3.next=10;return _regeneratorRuntime.awrap(ExpoBarCodeScannerModule.scanFromURLAsync(url,[BarCodeType.qr]));case 10:return _context3.abrupt(\"return\",_context3.sent);case 11:_context3.next=13;return _regeneratorRuntime.awrap(ExpoBarCodeScannerModule.scanFromURLAsync(url,barCodeTypes));case 13:return _context3.abrupt(\"return\",_context3.sent);case 14:case\"end\":return _context3.stop();}}},null,null,null,Promise);}}]);return BarCodeScanner;}(React.Component);BarCodeScanner.Constants={BarCodeType:BarCodeType,Type:Type};BarCodeScanner.ConversionTables={type:Type};BarCodeScanner.defaultProps={type:Type.back,barCodeTypes:Object.values(BarCodeType)};var Constants=BarCodeScanner.Constants,getPermissionsAsync=BarCodeScanner.getPermissionsAsync,requestPermissionsAsync=BarCodeScanner.requestPermissionsAsync;export{Constants,getPermissionsAsync,requestPermissionsAsync};","map":{"version":3,"sources":["../src/BarCodeScanner.tsx"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport * as React from 'react';\nimport { Platform, ViewProps } from 'react-native';\nimport { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\n\nimport ExpoBarCodeScannerModule from './ExpoBarCodeScannerModule';\nimport ExpoBarCodeScannerView from './ExpoBarCodeScannerView';\n\nconst { BarCodeType, Type } = ExpoBarCodeScannerModule;\n\nconst EVENT_THROTTLE_MS = 500;\n\nexport type BarCodePoint = {\n  x: number;\n  y: number;\n};\n\nexport type BarCodeSize = {\n  height: number;\n  width: number;\n};\n\nexport type BarCodeBounds = {\n  origin: BarCodePoint;\n  size: BarCodeSize;\n};\n\nexport type BarCodeScannerResult = {\n  type: string;\n  data: string;\n  bounds?: BarCodeBounds;\n  cornerPoints?: BarCodePoint[];\n};\n\nexport type BarCodeEvent = BarCodeScannerResult & {\n  target?: number;\n};\n\nexport type BarCodeEventCallbackArguments = {\n  nativeEvent: BarCodeEvent;\n};\n\nexport type BarCodeScannedCallback = (params: BarCodeEvent) => void;\n\nexport { PermissionResponse, PermissionStatus };\n\nexport interface BarCodeScannerProps extends ViewProps {\n  type?: 'front' | 'back' | number;\n  barCodeTypes?: string[];\n  onBarCodeScanned?: BarCodeScannedCallback;\n}\n\nexport class BarCodeScanner extends React.Component<BarCodeScannerProps> {\n  lastEvents: { [key: string]: any } = {};\n  lastEventsTimes: { [key: string]: any } = {};\n\n  static Constants = {\n    BarCodeType,\n    Type,\n  };\n\n  static ConversionTables = {\n    type: Type,\n  };\n\n  static defaultProps = {\n    type: Type.back,\n    barCodeTypes: Object.values(BarCodeType),\n  };\n\n  static async getPermissionsAsync(): Promise<PermissionResponse> {\n    return ExpoBarCodeScannerModule.getPermissionsAsync();\n  }\n\n  static async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return ExpoBarCodeScannerModule.requestPermissionsAsync();\n  }\n\n  static async scanFromURLAsync(\n    url: string,\n    barCodeTypes: string[] = Object.values(BarCodeType)\n  ): Promise<BarCodeScannerResult[]> {\n    if (!ExpoBarCodeScannerModule.scanFromURLAsync) {\n      throw new UnavailabilityError('expo-barcode-scanner', 'scanFromURLAsync');\n    }\n    if (Array.isArray(barCodeTypes) && !barCodeTypes.length) {\n      throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');\n    }\n\n    if (Platform.OS === 'ios') {\n      if (Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeType.qr)) {\n        // Only QR type is supported on iOS, fail if one tries to use other types\n        throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n      }\n      // on iOS use only supported QR type\n      return await ExpoBarCodeScannerModule.scanFromURLAsync(url, [BarCodeType.qr]);\n    }\n\n    // On other platforms, if barCodeTypes is not provided, use all available types\n    return await ExpoBarCodeScannerModule.scanFromURLAsync(url, barCodeTypes);\n  }\n\n  render() {\n    const nativeProps = this.convertNativeProps(this.props);\n    const { onBarCodeScanned } = this.props;\n    return (\n      <ExpoBarCodeScannerView\n        {...nativeProps}\n        onBarCodeScanned={this.onObjectDetected(onBarCodeScanned)}\n      />\n    );\n  }\n\n  onObjectDetected = (callback?: BarCodeScannedCallback) => ({\n    nativeEvent,\n  }: BarCodeEventCallbackArguments) => {\n    const { type } = nativeEvent;\n    if (\n      this.lastEvents[type] &&\n      this.lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this.lastEvents[type] &&\n      Date.now() - this.lastEventsTimes[type] < EVENT_THROTTLE_MS\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this.lastEventsTimes[type] = new Date();\n      this.lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  convertNativeProps(props: BarCodeScannerProps) {\n    const nativeProps: BarCodeScannerProps = {};\n\n    for (const [key, value] of Object.entries(props)) {\n      if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n        nativeProps[key] = BarCodeScanner.ConversionTables[key][value];\n      } else {\n        nativeProps[key] = value;\n      }\n    }\n\n    return nativeProps;\n  }\n}\n\nexport const { Constants, getPermissionsAsync, requestPermissionsAsync } = BarCodeScanner;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}