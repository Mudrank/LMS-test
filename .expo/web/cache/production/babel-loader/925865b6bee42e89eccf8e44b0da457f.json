{"ast":null,"code":"var TYPE_VALUE='value';var TYPE_ERROR='error';export default function createIconSourceCache(){var cache=new Map();var setValue=function setValue(key,value){return cache.set(key,{type:TYPE_VALUE,data:value});};var setError=function setError(key,error){return cache.set(key,{type:TYPE_ERROR,data:error});};var has=function has(key){return cache.has(key);};var get=function get(key){if(!cache.has(key)){return undefined;}var _cache$get=cache.get(key),type=_cache$get.type,data=_cache$get.data;if(type===TYPE_ERROR){throw data;}return data;};return{setValue:setValue,setError:setError,has:has,get:get};}","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/Wireless-Library-management/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/create-icon-source-cache.js"],"names":["TYPE_VALUE","TYPE_ERROR","createIconSourceCache","cache","Map","setValue","key","value","set","type","data","setError","error","has","get","undefined"],"mappings":"AAAA,GAAMA,CAAAA,UAAU,CAAG,OAAnB,CACA,GAAMC,CAAAA,UAAU,CAAG,OAAnB,CAEA,cAAe,SAASC,CAAAA,qBAAT,EAAiC,CAC9C,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,GAAJ,EAAd,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,KAAN,QACfJ,CAAAA,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAe,CAAEG,IAAI,CAAET,UAAR,CAAoBU,IAAI,CAAEH,KAA1B,CAAf,CADe,EAAjB,CAGA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACL,GAAD,CAAMM,KAAN,QACfT,CAAAA,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAe,CAAEG,IAAI,CAAER,UAAR,CAAoBS,IAAI,CAAEE,KAA1B,CAAf,CADe,EAAjB,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAAP,GAAG,QAAIH,CAAAA,KAAK,CAACU,GAAN,CAAUP,GAAV,CAAJ,EAAf,CAEA,GAAMQ,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAAR,GAAG,CAAI,CACjB,GAAI,CAACH,KAAK,CAACU,GAAN,CAAUP,GAAV,CAAL,CAAqB,CACnB,MAAOS,CAAAA,SAAP,CACD,CAHgB,eAIMZ,KAAK,CAACW,GAAN,CAAUR,GAAV,CAJN,CAITG,IAJS,YAITA,IAJS,CAIHC,IAJG,YAIHA,IAJG,CAKjB,GAAID,IAAI,GAAKR,UAAb,CAAyB,CACvB,KAAMS,CAAAA,IAAN,CACD,CACD,MAAOA,CAAAA,IAAP,CACD,CATD,CAWA,MAAO,CAAEL,QAAQ,CAARA,QAAF,CAAYM,QAAQ,CAARA,QAAZ,CAAsBE,GAAG,CAAHA,GAAtB,CAA2BC,GAAG,CAAHA,GAA3B,CAAP,CACD","sourcesContent":["const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n"]},"metadata":{},"sourceType":"module"}