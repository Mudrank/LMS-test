{"ast":null,"code":"function setAndForwardRef(_ref){var getForwardedRef=_ref.getForwardedRef,setLocalRef=_ref.setLocalRef;return function forwardRef(ref){var forwardedRef=getForwardedRef();setLocalRef(ref);if(typeof forwardedRef==='function'){forwardedRef(ref);}else if(typeof forwardedRef==='object'&&forwardedRef!=null){forwardedRef.current=ref;}};}export default setAndForwardRef;","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/Wireless-Library-management/node_modules/react-native-reanimated/lib/setAndForwardRef.js"],"names":["setAndForwardRef","getForwardedRef","setLocalRef","forwardRef","ref","forwardedRef","current"],"mappings":"AAmCA,QAASA,CAAAA,gBAAT,MAA4D,IAAhCC,CAAAA,eAAgC,MAAhCA,eAAgC,CAAfC,WAAe,MAAfA,WAAe,CAC1D,MAAO,SAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAyB,CAC9B,GAAMC,CAAAA,YAAY,CAAGJ,eAAe,EAApC,CAEAC,WAAW,CAACE,GAAD,CAAX,CAGA,GAAI,MAAOC,CAAAA,YAAP,GAAwB,UAA5B,CAAwC,CAEtCA,YAAY,CAACD,GAAD,CAAZ,CACD,CAHD,IAGO,IAAI,MAAOC,CAAAA,YAAP,GAAwB,QAAxB,EAAoCA,YAAY,EAAI,IAAxD,CAA8D,CAEnEA,YAAY,CAACC,OAAb,CAAuBF,GAAvB,CACD,CACF,CAbD,CAcD,CAED,cAAeJ,CAAAA,gBAAf","sourcesContent":["/**\n * imported from react-native\n */\n\n/**\n * This is a helper function for when a component needs to be able to forward a ref\n * to a child component, but still needs to have access to that component as part of\n * its implementation.\n *\n * Its main use case is in wrappers for native components.\n *\n * Usage:\n *\n *   class MyView extends React.Component {\n *     _nativeRef = null;\n *\n *     _setNativeRef = setAndForwardRef({\n *       getForwardedRef: () => this.props.forwardedRef,\n *       setLocalRef: ref => {\n *         this._nativeRef = ref;\n *       },\n *     });\n *\n *     render() {\n *       return <View ref={this._setNativeRef} />;\n *     }\n *   }\n *\n *   const MyViewWithRef = React.forwardRef((props, ref) => (\n *     <MyView {...props} forwardedRef={ref} />\n *   ));\n *\n *   module.exports = MyViewWithRef;\n */\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }) {\n  return function forwardRef(ref) {\n    const forwardedRef = getForwardedRef();\n\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nexport default setAndForwardRef;\n"]},"metadata":{},"sourceType":"module"}