{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";import BackHandler from\"react-native-web/dist/exports/BackHandler\";import{NavigationActions,ThemeProvider,pathUtils,getNavigation,NavigationProvider}from'@react-navigation/core';import invariant from\"./utils/invariant\";import docsUrl from\"./utils/docsUrl\";var urlToPathAndParams=pathUtils.urlToPathAndParams;function isStateful(props){return!props.navigation;}function validateProps(props){if(props.persistenceKey){console.warn('You passed persistenceKey prop to a navigator. '+'The persistenceKey prop was replaced by a more flexible persistence mechanism, '+'please see the navigation state persistence docs for more information. '+'Passing the persistenceKey prop is a no-op.');}if(isStateful(props)){return;}var navigation=props.navigation,screenProps=props.screenProps,persistNavigationState=props.persistNavigationState,loadNavigationState=props.loadNavigationState,theme=props.theme,containerProps=_objectWithoutProperties(props,[\"navigation\",\"screenProps\",\"persistNavigationState\",\"loadNavigationState\",\"theme\"]);var keys=Object.keys(containerProps);if(keys.length!==0){throw new Error('This navigator has both navigation and container props, so it is '+\"unclear if it should own its own state. Remove props: \\\"\".concat(keys.join(', '),\"\\\" \")+'if the navigator should get its state from the navigation prop. If the '+'navigator should maintain its own state, do not pass a navigation prop.');}invariant(persistNavigationState===undefined&&loadNavigationState===undefined||typeof persistNavigationState==='function'&&typeof loadNavigationState==='function','both persistNavigationState and loadNavigationState must either be undefined, or be functions');}var _statefulContainerCount=0;export function _TESTING_ONLY_reset_container_count(){_statefulContainerCount=0;}var _reactNavigationIsHydratingState=false;export default function createNavigationContainer(Component){var NavigationContainer=function(_React$Component){_inherits(NavigationContainer,_React$Component);var _super=_createSuper(NavigationContainer);function NavigationContainer(props){var _this;_classCallCheck(this,NavigationContainer);_this=_super.call(this,props);_defineProperty(_assertThisInitialized(_this),\"subs\",null);_defineProperty(_assertThisInitialized(_this),\"_actionEventSubscribers\",new Set());_defineProperty(_assertThisInitialized(_this),\"_handleOpenURL\",function(_ref){var url=_ref.url;var _this$props=_this.props,enableURLHandling=_this$props.enableURLHandling,uriPrefix=_this$props.uriPrefix;if(enableURLHandling===false){return;}var parsedUrl=urlToPathAndParams(url,uriPrefix);if(parsedUrl){var path=parsedUrl.path,params=parsedUrl.params;var action=Component.router.getActionForPathAndParams(path,params);if(action){_this.dispatch(action);}}});_defineProperty(_assertThisInitialized(_this),\"_persistNavigationState\",function _callee(nav){var persistNavigationState;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:persistNavigationState=_this.props.persistNavigationState;if(!persistNavigationState){_context.next=10;break;}_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(persistNavigationState(nav));case 5:_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](2);console.warn('Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.');case 10:case\"end\":return _context.stop();}}},null,null,[[2,7]],Promise);});_defineProperty(_assertThisInitialized(_this),\"dispatch\",function(action){if(_this.props.navigation){return _this.props.navigation.dispatch(action);}_this._navState=_this._navState||_this.state.nav;var lastNavState=_this._navState;invariant(lastNavState,'should be set in constructor if stateful');var reducedState=Component.router.getStateForAction(action,lastNavState);var navState=reducedState===null?lastNavState:reducedState;var dispatchActionEvents=function dispatchActionEvents(){_this._actionEventSubscribers.forEach(function(subscriber){return subscriber({type:'action',action:action,state:navState,lastState:lastNavState});});};if(reducedState===null){dispatchActionEvents();return true;}if(navState!==lastNavState){_this._navState=navState;_this.setState({nav:navState},function(){_this._onNavigationStateChange(lastNavState,navState,action);dispatchActionEvents();_this._persistNavigationState(navState);});return true;}dispatchActionEvents();return false;});_defineProperty(_assertThisInitialized(_this),\"_getScreenProps\",function(){return _this.props.screenProps;});_defineProperty(_assertThisInitialized(_this),\"_getTheme\",function(){if(_this.props.theme==='light'||_this.props.theme==='dark'){return _this.props.theme;}else if(_this.props.theme==='no-preference'){return'light';}else{console.warn(\"Invalid theme provided: \".concat(_this.props.theme,\". Only 'light' and 'dark' are supported. Falling back to 'light'\"));return'light';}});validateProps(props);_this._initialAction=NavigationActions.init();if(_this._isStateful()&&BackHandler&&typeof BackHandler.addEventListener==='function'){_this.subs=BackHandler.addEventListener('hardwareBackPress',function(){if(!_this._isMounted){_this.subs&&_this.subs.remove();}else{return _this.dispatch(NavigationActions.back());}});}_this.state={nav:_this._isStateful()&&!props.loadNavigationState?Component.router.getStateForAction(_this._initialAction):null};return _this;}_createClass(NavigationContainer,[{key:\"_renderLoading\",value:function _renderLoading(){return this.props.renderLoadingExperimental?this.props.renderLoadingExperimental():null;}},{key:\"_isStateful\",value:function _isStateful(){return isStateful(this.props);}},{key:\"_onNavigationStateChange\",value:function _onNavigationStateChange(prevNav,nav,action){if(typeof this.props.onNavigationStateChange==='undefined'&&this._isStateful()&&!!process.env.REACT_NAV_LOGGING){if(console.group){console.group('Navigation Dispatch: ');console.log('Action: ',action);console.log('New State: ',nav);console.log('Last State: ',prevNav);console.groupEnd();}else{console.log('Navigation Dispatch: ',{action:action,newState:nav,lastState:prevNav});}return;}if(typeof this.props.onNavigationStateChange==='function'){this.props.onNavigationStateChange(prevNav,nav,action);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this._navState===this.state.nav){this._navState=null;}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var parsedUrl,userProvidedStartupState,_await$this$getStartu,action,startupState,_parsedUrl,path,params,urlAction,dispatchActions;return _regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this._isMounted=true;if(this._isStateful()){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:if(process.env.NODE_ENV!=='production'&&!this.props.detached){if(_statefulContainerCount>0){if(Platform.OS==='ios'){console.warn(\"You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: \".concat(docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator')));}}}_statefulContainerCount++;this._linkingSub=Linking.addEventListener('url',this._handleOpenURL);parsedUrl=null;userProvidedStartupState=null;if(!(this.props.enableURLHandling!==false)){_context2.next=14;break;}_context2.next=11;return _regeneratorRuntime.awrap(this.getStartupParams());case 11:_await$this$getStartu=_context2.sent;parsedUrl=_await$this$getStartu.parsedUrl;userProvidedStartupState=_await$this$getStartu.userProvidedStartupState;case 14:action=this._initialAction;startupState=this.state.nav;if(!startupState&&!userProvidedStartupState){!!process.env.REACT_NAV_LOGGING&&console.log('Init new Navigation State');startupState=Component.router.getStateForAction(action);}if(userProvidedStartupState){startupState=userProvidedStartupState;_reactNavigationIsHydratingState=true;}if(parsedUrl){_parsedUrl=parsedUrl,path=_parsedUrl.path,params=_parsedUrl.params;urlAction=Component.router.getActionForPathAndParams(path,params);if(urlAction){!!process.env.REACT_NAV_LOGGING&&console.log('Applying Navigation Action for Initial URL:',parsedUrl);action=urlAction;startupState=Component.router.getStateForAction(urlAction,startupState);}}dispatchActions=function dispatchActions(){return _this2._actionEventSubscribers.forEach(function(subscriber){return subscriber({type:'action',action:action,state:_this2.state.nav,lastState:null});});};if(!(startupState===this.state.nav)){_context2.next=23;break;}dispatchActions();return _context2.abrupt(\"return\");case 23:this.setState({nav:startupState},function(){_reactNavigationIsHydratingState=false;dispatchActions();});case 24:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"getStartupParams\",value:function getStartupParams(){var _this$props2,uriPrefix,loadNavigationState,url,loadedNavState,_await$Promise$all,_await$Promise$all2;return _regeneratorRuntime.async(function getStartupParams$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this$props2=this.props,uriPrefix=_this$props2.uriPrefix,loadNavigationState=_this$props2.loadNavigationState;_context3.prev=1;_context3.next=4;return _regeneratorRuntime.awrap(Promise.all([Linking.getInitialURL(),loadNavigationState&&loadNavigationState()]));case 4:_await$Promise$all=_context3.sent;_await$Promise$all2=_slicedToArray(_await$Promise$all,2);url=_await$Promise$all2[0];loadedNavState=_await$Promise$all2[1];_context3.next=12;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](1);case 12:return _context3.abrupt(\"return\",{parsedUrl:url&&urlToPathAndParams(url,uriPrefix),userProvidedStartupState:loadedNavState});case 13:case\"end\":return _context3.stop();}}},null,this,[[1,10]],Promise);}},{key:\"componentDidCatch\",value:function componentDidCatch(e){if(_reactNavigationIsHydratingState){_reactNavigationIsHydratingState=false;console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...');this.dispatch(NavigationActions.init());}else{throw e;}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this$_linkingSub;this._isMounted=false;if((_this$_linkingSub=this._linkingSub)===null||_this$_linkingSub===void 0?void 0:_this$_linkingSub.remove){var _this$_linkingSub2;(_this$_linkingSub2=this._linkingSub)===null||_this$_linkingSub2===void 0?void 0:_this$_linkingSub2.remove();}else{Linking.removeEventListener('url',this._handleOpenURL);}this.subs&&this.subs.remove();if(this._isStateful()){_statefulContainerCount--;}}},{key:\"render\",value:function render(){var _this3=this;var navigation=this.props.navigation;if(this._isStateful()){var navState=this.state.nav;if(!navState){return this._renderLoading();}if(!this._navigation||this._navigation.state!==navState){this._navigation=getNavigation(Component.router,navState,this.dispatch,this._actionEventSubscribers,this._getScreenProps,function(){return _this3._navigation;});}navigation=this._navigation;}invariant(navigation,'failed to get navigation');return React.createElement(ThemeProvider,{value:this._getTheme()},React.createElement(NavigationProvider,{value:navigation},React.createElement(Component,_extends({},this.props,{navigation:navigation}))));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps){validateProps(nextProps);return null;}}]);return NavigationContainer;}(React.Component);_defineProperty(NavigationContainer,\"router\",Component.router);_defineProperty(NavigationContainer,\"navigationOptions\",null);_defineProperty(NavigationContainer,\"defaultProps\",{theme:'light'});return NavigationContainer;}","map":{"version":3,"sources":["createAppContainer.js"],"names":["urlToPathAndParams","props","console","isStateful","containerProps","keys","Object","invariant","persistNavigationState","loadNavigationState","_statefulContainerCount","_reactNavigationIsHydratingState","React","Component","theme","validateProps","constructor","NavigationActions","BackHandler","nav","_renderLoading","_isStateful","url","uriPrefix","enableURLHandling","parsedUrl","params","action","_onNavigationStateChange","process","newState","lastState","prevNav","componentDidUpdate","Platform","docsUrl","Linking","userProvidedStartupState","startupState","urlAction","dispatchActions","subscriber","type","state","Promise","loadedNavState","componentDidCatch","componentWillUnmount","lastNavState","reducedState","navState","dispatchActionEvents","render","navigation","getNavigation"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\n\nimport * as React from 'react';\nimport { Linking, Platform, BackHandler } from 'react-native';\nimport {\n  NavigationActions,\n  ThemeProvider,\n  pathUtils,\n  getNavigation,\n  NavigationProvider,\n} from '@react-navigation/core';\nimport invariant from './utils/invariant';\nimport docsUrl from './utils/docsUrl';\n\nconst { urlToPathAndParams } = pathUtils;\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn(\n      'You passed persistenceKey prop to a navigator. ' +\n        'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' +\n        'please see the navigation state persistence docs for more information. ' +\n        'Passing the persistenceKey prop is a no-op.'\n    );\n  }\n  if (isStateful(props)) {\n    return;\n  }\n  /* eslint-disable no-unused-vars */\n  const {\n    navigation,\n    screenProps,\n    persistNavigationState,\n    loadNavigationState,\n    theme,\n    ...containerProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  const keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error(\n      'This navigator has both navigation and container props, so it is ' +\n        `unclear if it should own its own state. Remove props: \"${keys.join(\n          ', '\n        )}\" ` +\n        'if the navigator should get its state from the navigation prop. If the ' +\n        'navigator should maintain its own state, do not pass a navigation prop.'\n    );\n  }\n  invariant(\n    (persistNavigationState === undefined &&\n      loadNavigationState === undefined) ||\n      (typeof persistNavigationState === 'function' &&\n        typeof loadNavigationState === 'function'),\n    'both persistNavigationState and loadNavigationState must either be undefined, or be functions'\n  );\n}\n\n// Track the number of stateful container instances. Warn if >0 and not using the\n// detached prop to explicitly acknowledge the behavior. We should deprecated implicit\n// stateful navigation containers in a future release and require a provider style pattern\n// instead in order to eliminate confusion entirely.\nlet _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\n\n// We keep a global flag to catch errors during the state persistence hydrating scenario.\n// The innermost navigator who catches the error will dispatch a new init action.\nlet _reactNavigationIsHydratingState = false;\n// Unfortunate to use global state here, but it seems necessesary for the time\n// being. There seems to be some problems with cascading componentDidCatch\n// handlers. Ideally the inner non-stateful navigator catches the error and\n// re-throws it, to be caught by the top-level stateful navigator.\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\nexport default function createNavigationContainer(Component) {\n  class NavigationContainer extends React.Component {\n    subs = null;\n\n    static router = Component.router;\n    static navigationOptions = null;\n\n    static defaultProps = {\n      theme: 'light',\n    };\n\n    static getDerivedStateFromProps(nextProps) {\n      validateProps(nextProps);\n      return null;\n    }\n\n    _actionEventSubscribers = new Set();\n\n    constructor(props) {\n      super(props);\n\n      validateProps(props);\n\n      this._initialAction = NavigationActions.init();\n\n      if (\n        this._isStateful() &&\n        BackHandler &&\n        typeof BackHandler.addEventListener === 'function'\n      ) {\n        this.subs = BackHandler.addEventListener('hardwareBackPress', () => {\n          if (!this._isMounted) {\n            this.subs && this.subs.remove();\n          } else {\n            // dispatch returns true if the action results in a state change,\n            // and false otherwise. This maps well to what BackHandler expects\n            // from a callback -- true if handled, false if not handled\n            return this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      this.state = {\n        nav:\n          this._isStateful() && !props.loadNavigationState\n            ? Component.router.getStateForAction(this._initialAction)\n            : null,\n      };\n    }\n\n    _renderLoading() {\n      return this.props.renderLoadingExperimental\n        ? this.props.renderLoadingExperimental()\n        : null;\n    }\n\n    _isStateful() {\n      return isStateful(this.props);\n    }\n\n    _handleOpenURL = ({ url }) => {\n      const { enableURLHandling, uriPrefix } = this.props;\n      if (enableURLHandling === false) {\n        return;\n      }\n      const parsedUrl = urlToPathAndParams(url, uriPrefix);\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const action = Component.router.getActionForPathAndParams(path, params);\n        if (action) {\n          this.dispatch(action);\n        }\n      }\n    };\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (\n        typeof this.props.onNavigationStateChange === 'undefined' &&\n        this._isStateful() &&\n        !!process.env.REACT_NAV_LOGGING\n      ) {\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav,\n          });\n        }\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentDidUpdate() {\n      // Clear cached _navState every tick\n      if (this._navState === this.state.nav) {\n        this._navState = null;\n      }\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n      if (!this._isStateful()) {\n        return;\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n        if (_statefulContainerCount > 0) {\n          // Temporarily only show this on iOS due to this issue:\n          // https://github.com/react-navigation/react-navigation/issues/4196#issuecomment-390827829\n          if (Platform.OS === 'ios') {\n            console.warn(\n              `You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: ${docsUrl(\n                'common-mistakes.html#explicitly-rendering-more-than-one-navigator'\n              )}`\n            );\n          }\n        }\n      }\n      _statefulContainerCount++;\n      this._linkingSub = Linking.addEventListener('url', this._handleOpenURL);\n\n      // Pull out anything that can impact state\n      let parsedUrl = null;\n      let userProvidedStartupState = null;\n      if (this.props.enableURLHandling !== false) {\n        ({\n          parsedUrl,\n          userProvidedStartupState,\n        } = await this.getStartupParams());\n      }\n\n      // Initialize state. This must be done *after* any async code\n      // so we don't end up with a different value for this.state.nav\n      // due to changes while async function was resolving\n      let action = this._initialAction;\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      let startupState = this.state.nav;\n      if (!startupState && !userProvidedStartupState) {\n        !!process.env.REACT_NAV_LOGGING &&\n          console.log('Init new Navigation State');\n        startupState = Component.router.getStateForAction(action);\n      }\n\n      // Pull user-provided persisted state\n      if (userProvidedStartupState) {\n        startupState = userProvidedStartupState;\n        _reactNavigationIsHydratingState = true;\n      }\n\n      // Pull state out of URL\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const urlAction = Component.router.getActionForPathAndParams(\n          path,\n          params\n        );\n        if (urlAction) {\n          !!process.env.REACT_NAV_LOGGING &&\n            console.log(\n              'Applying Navigation Action for Initial URL:',\n              parsedUrl\n            );\n          action = urlAction;\n          startupState = Component.router.getStateForAction(\n            urlAction,\n            startupState\n          );\n        }\n      }\n\n      const dispatchActions = () =>\n        this._actionEventSubscribers.forEach((subscriber) =>\n          subscriber({\n            type: 'action',\n            action,\n            state: this.state.nav,\n            lastState: null,\n          })\n        );\n\n      if (startupState === this.state.nav) {\n        dispatchActions();\n        return;\n      }\n\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({ nav: startupState }, () => {\n        _reactNavigationIsHydratingState = false;\n        dispatchActions();\n      });\n    }\n\n    async getStartupParams() {\n      const { uriPrefix, loadNavigationState } = this.props;\n      let url, loadedNavState;\n      try {\n        [url, loadedNavState] = await Promise.all([\n          Linking.getInitialURL(),\n          loadNavigationState && loadNavigationState(),\n        ]);\n      } catch (err) {\n        // ignore\n      }\n      return {\n        parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n        userProvidedStartupState: loadedNavState,\n      };\n    }\n\n    componentDidCatch(e) {\n      if (_reactNavigationIsHydratingState) {\n        _reactNavigationIsHydratingState = false;\n        console.warn(\n          'Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...'\n        );\n        this.dispatch(NavigationActions.init());\n      } else {\n        throw e;\n      }\n    }\n\n    _persistNavigationState = async (nav) => {\n      const { persistNavigationState } = this.props;\n      if (persistNavigationState) {\n        try {\n          await persistNavigationState(nav);\n        } catch (err) {\n          console.warn(\n            'Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.'\n          );\n        }\n      }\n    };\n\n    componentWillUnmount() {\n      this._isMounted = false;\n\n      // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n      if (this._linkingSub?.remove) {\n        this._linkingSub?.remove();\n      } else {\n        Linking.removeEventListener('url', this._handleOpenURL);\n      }\n\n      this.subs && this.subs.remove();\n\n      if (this._isStateful()) {\n        _statefulContainerCount--;\n      }\n    }\n\n    // Per-tick temporary storage for state.nav\n\n    dispatch = (action) => {\n      if (this.props.navigation) {\n        return this.props.navigation.dispatch(action);\n      }\n\n      // navState will have the most up-to-date value, because setState sometimes behaves asyncronously\n      this._navState = this._navState || this.state.nav;\n      const lastNavState = this._navState;\n      invariant(lastNavState, 'should be set in constructor if stateful');\n      const reducedState = Component.router.getStateForAction(\n        action,\n        lastNavState\n      );\n      const navState = reducedState === null ? lastNavState : reducedState;\n\n      const dispatchActionEvents = () => {\n        this._actionEventSubscribers.forEach((subscriber) =>\n          subscriber({\n            type: 'action',\n            action,\n            state: navState,\n            lastState: lastNavState,\n          })\n        );\n      };\n\n      if (reducedState === null) {\n        // The router will return null when action has been handled and the state hasn't changed.\n        // dispatch returns true when something has been handled.\n        dispatchActionEvents();\n        return true;\n      }\n\n      if (navState !== lastNavState) {\n        // Cache updates to state.nav during the tick to ensure that subsequent calls will not discard this change\n        this._navState = navState;\n        this.setState({ nav: navState }, () => {\n          this._onNavigationStateChange(lastNavState, navState, action);\n          dispatchActionEvents();\n          this._persistNavigationState(navState);\n        });\n        return true;\n      }\n\n      dispatchActionEvents();\n      return false;\n    };\n\n    _getScreenProps = () => this.props.screenProps;\n\n    _getTheme = () => {\n      if (this.props.theme === 'light' || this.props.theme === 'dark') {\n        return this.props.theme;\n      } else if (this.props.theme === 'no-preference') {\n        return 'light';\n      } else {\n        console.warn(\n          `Invalid theme provided: ${this.props.theme}. Only 'light' and 'dark' are supported. Falling back to 'light'`\n        );\n        return 'light';\n      }\n    };\n\n    render() {\n      let navigation = this.props.navigation;\n      if (this._isStateful()) {\n        const navState = this.state.nav;\n        if (!navState) {\n          return this._renderLoading();\n        }\n        if (!this._navigation || this._navigation.state !== navState) {\n          this._navigation = getNavigation(\n            Component.router,\n            navState,\n            this.dispatch,\n            this._actionEventSubscribers,\n            this._getScreenProps,\n            () => this._navigation\n          );\n        }\n        navigation = this._navigation;\n      }\n      invariant(navigation, 'failed to get navigation');\n\n      return (\n        <ThemeProvider value={this._getTheme()}>\n          <NavigationProvider value={navigation}>\n            <Component {...this.props} navigation={navigation} />\n          </NavigationProvider>\n        </ThemeProvider>\n      );\n    }\n  }\n\n  return NavigationContainer;\n}\n"]},"metadata":{},"sourceType":"module"}