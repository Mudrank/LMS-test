{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import hoistNonReactStatic from'hoist-non-react-statics';export var isOrientationLandscape=function isOrientationLandscape(_ref){var width=_ref.width,height=_ref.height;return width>height;};export default function withDimensions(WrappedComponent){var EnhancedComponent=function(_React$Component){_inherits(EnhancedComponent,_React$Component);var _super=_createSuper(EnhancedComponent);function EnhancedComponent(props){var _this;_classCallCheck(this,EnhancedComponent);_this=_super.call(this,props);_defineProperty(_assertThisInitialized(_this),\"handleOrientationChange\",function(_ref2){var window=_ref2.window;var width=window.width,height=window.height;_this.setState({dimensions:{width:width,height:height},isLandscape:isOrientationLandscape({width:width,height:height})});});var _Dimensions$get=Dimensions.get('window'),_width=_Dimensions$get.width,_height=_Dimensions$get.height;_this.state={dimensions:{width:_width,height:_height},isLandscape:isOrientationLandscape({width:_width,height:_height})};return _this;}_createClass(EnhancedComponent,[{key:\"componentDidMount\",value:function componentDidMount(){Dimensions.addEventListener('change',this.handleOrientationChange);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){Dimensions.removeEventListener('change',this.handleOrientationChange);}},{key:\"render\",value:function render(){return React.createElement(WrappedComponent,_extends({},this.props,this.state));}}]);return EnhancedComponent;}(React.Component);_defineProperty(EnhancedComponent,\"displayName\",\"withDimensions(\".concat(WrappedComponent.displayName,\")\"));return hoistNonReactStatic(EnhancedComponent,WrappedComponent);}","map":{"version":3,"sources":["withDimensions.tsx"],"names":["isOrientationLandscape","height","width","React","WrappedComponent","constructor","Dimensions","dimensions","isLandscape","componentDidMount","componentWillUnmount","window","render","hoistNonReactStatic"],"mappings":"miDAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iEAEA,MAAA,CAAA,mBAAA,KAAA,yBAAA,CAYA,MAAO,IAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,UAAC,CAAA,KAAD,MAAC,KAAD,CAAUC,MAAV,MAAUA,MAAV,OACpCC,CAAAA,KAAK,CADA,MAA+B,EAA/B,CAGP,cAAe,SAAA,CAAA,cAAA,CAAA,gBAAA,CAEgE,IAC7E,CAAA,iBAD6E,qHAI3EG,2BAAW,KAAXA,CAA0B,mDACxB,uBAAA,KAAA,EADwB,eAAA,+BAAA,yBAAA,CAkBA,eAAwC,IAArCM,CAAAA,MAAqC,OAArCA,MAAqC,IAC1D,CAAA,KAD0D,CAChE,MADgE,CAC1D,KAD0D,CACjDV,MADiD,CAChE,MADgE,CACjDA,MADiD,CAEhE,MAAA,QAAA,CAAc,CACZM,UAAU,CAAE,CAAEL,KAAF,CAAEA,KAAF,CAASD,MAAAA,CAAAA,MAAT,CADA,CAEZO,WAAW,CAAER,sBAAsB,CAAC,CAAEE,KAAF,CAAEA,KAAF,CAASD,MAAAA,CAAAA,MAAT,CAAD,CAFvB,CAAd,EApBwB,CAAA,CAAA,CAAA,oBAGEK,UAAU,CAAVA,GAAAA,CAA1B,QAA0BA,CAHF,CAGlB,MAHkB,iBAGhBJ,KAHgB,CAGTD,OAHS,iBAGTA,MAHS,CAIxB,MAAA,KAAA,CAAa,CACXM,UAAU,CAAE,CAAEL,KAAK,CAAP,MAAA,CAASD,MAAM,CAANA,OAAT,CADD,CAEXO,WAAW,CAAER,sBAAsB,CAAC,CAAEE,KAAK,CAAP,MAAA,CAASD,MAAM,CAANA,OAAT,CAAD,CAFxB,CAAb,CAJwB,aAQzB,CAZ0E,+DAc3EQ,4BAAoB,CAClBH,UAAU,CAAVA,gBAAAA,CAAAA,QAAAA,CAAsC,KAAtCA,uBAAAA,EACD,CAhB0E,oCAkB3EI,+BAAuB,CACrBJ,UAAU,CAAVA,mBAAAA,CAAAA,QAAAA,CAAyC,KAAzCA,uBAAAA,EACD,CApB0E,sBA8B3EM,iBAAS,CAEP,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA,CAAsB,KAAtB,KAAA,CAAsC,KAA7C,KAAO,CAAA,CAAP,CACD,CAjC0E,+BAC7CT,KAAK,CAArC,SAD6E,EAAA,eAAA,CAAA,iBAAA,CAAA,aAAA,CAAA,kBAAA,MAAA,CAEpCC,gBAAgB,CAFoB,WAAA,CAAA,GAAA,CAAA,CAAA,CAqC7E,MAAOS,CAAAA,mBAAmB,CAAA,iBAAA,CAA1B,gBAA0B,CAA1B,CACD","sourcesContent":["import * as React from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\ntype DimensionsType = {\n  width: number;\n  height: number;\n};\n\ntype InjectedProps = {\n  dimensions: DimensionsType;\n  isLandscape: boolean;\n};\n\nexport const isOrientationLandscape = ({ width, height }: DimensionsType) =>\n  width > height;\n\nexport default function withDimensions<Props extends InjectedProps>(\n  WrappedComponent: React.ComponentType<Props>\n): React.ComponentType<Pick<Props, Exclude<keyof Props, keyof InjectedProps>>> {\n  class EnhancedComponent extends React.Component {\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\n\n    constructor(props: Props) {\n      super(props);\n\n      const { width, height } = Dimensions.get('window');\n      this.state = {\n        dimensions: { width, height },\n        isLandscape: isOrientationLandscape({ width, height }),\n      };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      const { width, height } = window;\n      this.setState({\n        dimensions: { width, height },\n        isLandscape: isOrientationLandscape({ width, height }),\n      });\n    };\n\n    render() {\n      // @ts-ignore\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  // @ts-ignore\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}