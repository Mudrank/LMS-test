{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{TabRouter,StackActions,SceneView,createNavigator,SwitchActions}from'react-navigation';export default function createTabNavigator(TabView){var NavigationView=function(_React$Component){_inherits(NavigationView,_React$Component);var _super=_createSuper(NavigationView);function NavigationView(){var _this;_classCallCheck(this,NavigationView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"_renderScene\",function(_ref){var route=_ref.route;var _this$props=_this.props,screenProps=_this$props.screenProps,descriptors=_this$props.descriptors;var descriptor=descriptors[route.key];var TabComponent=descriptor.getComponent();return React.createElement(SceneView,{screenProps:screenProps,navigation:descriptor.navigation,component:TabComponent});});_defineProperty(_assertThisInitialized(_this),\"_renderIcon\",function(_ref2){var route=_ref2.route,focused=_ref2.focused,tintColor=_ref2.tintColor,_ref2$horizontal=_ref2.horizontal,horizontal=_ref2$horizontal===void 0?false:_ref2$horizontal;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarIcon){return typeof options.tabBarIcon==='function'?options.tabBarIcon({focused:focused,tintColor:tintColor,horizontal:horizontal}):options.tabBarIcon;}return null;});_defineProperty(_assertThisInitialized(_this),\"_getLabelText\",function(_ref3){var route=_ref3.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarLabel){return options.tabBarLabel;}if(typeof options.title==='string'){return options.title;}return route.routeName;});_defineProperty(_assertThisInitialized(_this),\"_getAccessibilityLabel\",function(_ref4){var route=_ref4.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(typeof options.tabBarAccessibilityLabel!=='undefined'){return options.tabBarAccessibilityLabel;}var label=_this._getLabelText({route:route});if(typeof label==='string'){var routes=_this.props.navigation.state.routes;return\"\".concat(label,\", tab, \").concat(routes.indexOf(route)+1,\" of \").concat(routes.length);}return undefined;});_defineProperty(_assertThisInitialized(_this),\"_getTestID\",function(_ref5){var route=_ref5.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;return options.tabBarTestID;});_defineProperty(_assertThisInitialized(_this),\"_makeDefaultHandler\",function(_ref6){var route=_ref6.route,navigation=_ref6.navigation;return function(){if(navigation.isFocused()){if(route.hasOwnProperty('index')&&route.index>0){navigation.dispatch(StackActions.popToTop({key:route.key}));}else{navigation.emit('refocus');}}else{_this._jumpTo(route.routeName);}};});_defineProperty(_assertThisInitialized(_this),\"_handleTabPress\",function(_ref7){var route=_ref7.route;_this._isTabPress=true;Promise.resolve().then(function(){return _this._isTabPress=false;});var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var navigation=descriptor.navigation,options=descriptor.options;var defaultHandler=_this._makeDefaultHandler({route:route,navigation:navigation});if(options.tabBarOnPress){options.tabBarOnPress({navigation:navigation,defaultHandler:defaultHandler});}else{defaultHandler();}});_defineProperty(_assertThisInitialized(_this),\"_handleTabLongPress\",function(_ref8){var route=_ref8.route;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var navigation=descriptor.navigation,options=descriptor.options;var defaultHandler=_this._makeDefaultHandler({route:route,navigation:navigation});if(options.tabBarOnLongPress){options.tabBarOnLongPress({navigation:navigation,defaultHandler:defaultHandler});}else{defaultHandler();}});_defineProperty(_assertThisInitialized(_this),\"_handleIndexChange\",function(index){if(_this._isTabPress){_this._isTabPress=false;return;}_this._jumpTo(_this.props.navigation.state.routes[index].routeName);});_defineProperty(_assertThisInitialized(_this),\"_jumpTo\",function(routeName){var navigation=_this.props.navigation;navigation.dispatch(SwitchActions.jumpTo({routeName:routeName,key:navigation.state.key}));});_defineProperty(_assertThisInitialized(_this),\"_isTabPress\",false);return _this;}_createClass(NavigationView,[{key:\"render\",value:function render(){var _this$props2=this.props,descriptors=_this$props2.descriptors,navigation=_this$props2.navigation,screenProps=_this$props2.screenProps,navigationConfig=_this$props2.navigationConfig;var state=navigation.state;var route=state.routes[state.index];var descriptor=descriptors[route.key];return React.createElement(TabView,_extends({},navigationConfig,descriptor.options,{getLabelText:this._getLabelText,getAccessibilityLabel:this._getAccessibilityLabel,getTestID:this._getTestID,renderIcon:this._renderIcon,renderScene:this._renderScene,onIndexChange:this._handleIndexChange,onTabPress:this._handleTabPress,onTabLongPress:this._handleTabLongPress,navigation:navigation,descriptors:descriptors,screenProps:screenProps}));}}]);return NavigationView;}(React.Component);return function(routes){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var router=TabRouter(routes,config);return createNavigator(NavigationView,router,config);};}","map":{"version":3,"sources":["createTabNavigator.tsx"],"names":["React","route","descriptors","descriptor","TabComponent","horizontal","options","focused","tintColor","label","routes","navigation","key","Promise","defaultHandler","index","routeName","render","navigationConfig","state","screenProps","config","router","TabRouter","createNavigator"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TabRouter,\n  StackActions,\n  SceneView,\n  createNavigator,\n  SwitchActions,\n  NavigationRoute,\n  NavigationRouteConfigMap,\n  CreateNavigatorConfig,\n  NavigationTabRouterConfig,\n} from 'react-navigation';\nimport {\n  NavigationTabProp,\n  NavigationCommonTabOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype RouteConfig<Options> = NavigationRouteConfigMap<\n  Options,\n  NavigationTabProp<NavigationRoute, any>\n>;\n\ntype CommonProps = {\n  navigation: NavigationTabProp;\n  descriptors: SceneDescriptorMap;\n  screenProps?: unknown;\n};\n\ntype ExtraProps<Config extends {}> = {\n  navigationConfig: Config;\n};\n\nexport type RenderIconProps = {\n  route: NavigationRoute;\n  focused: boolean;\n  tintColor?: string;\n  horizontal?: boolean;\n};\n\nexport type NavigationViewProps = {\n  getLabelText: (props: { route: NavigationRoute }) => string | undefined;\n  getAccessibilityLabel: (props: {\n    route: NavigationRoute;\n  }) => string | undefined;\n  getTestID: (props: { route: NavigationRoute }) => string | undefined;\n  renderIcon: (props: RenderIconProps) => React.ReactNode;\n  renderScene: (props: { route: NavigationRoute }) => React.ReactNode;\n  onIndexChange: (index: number) => void;\n  onTabPress: (props: { route: NavigationRoute }) => void;\n  onTabLongPress: (props: { route: NavigationRoute }) => void;\n};\n\nexport default function createTabNavigator<\n  Config extends {},\n  Options extends NavigationCommonTabOptions,\n  Props extends NavigationViewProps & CommonProps\n>(TabView: React.ComponentType<Props & Config & Options>) {\n  class NavigationView extends React.Component<\n    Exclude<Props, NavigationViewProps> & ExtraProps<Config>\n  > {\n    _renderScene = ({ route }: { route: { key: string } }) => {\n      const { screenProps, descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const TabComponent = descriptor.getComponent();\n      return (\n        <SceneView\n          screenProps={screenProps}\n          navigation={descriptor.navigation}\n          component={TabComponent}\n        />\n      );\n    };\n\n    _renderIcon = ({\n      route,\n      focused,\n      tintColor,\n      horizontal = false,\n    }: RenderIconProps) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (options.tabBarIcon) {\n        return typeof options.tabBarIcon === 'function'\n          ? options.tabBarIcon({ focused, tintColor, horizontal })\n          : options.tabBarIcon;\n      }\n\n      return null;\n    };\n\n    _getLabelText = ({ route }: { route: NavigationRoute }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (options.tabBarLabel) {\n        return options.tabBarLabel;\n      }\n\n      if (typeof options.title === 'string') {\n        return options.title;\n      }\n\n      return route.routeName;\n    };\n\n    _getAccessibilityLabel = ({ route }: { route: NavigationRoute }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      if (typeof options.tabBarAccessibilityLabel !== 'undefined') {\n        return options.tabBarAccessibilityLabel;\n      }\n\n      const label = this._getLabelText({ route });\n\n      if (typeof label === 'string') {\n        const { routes } = this.props.navigation.state;\n        return `${label}, tab, ${routes.indexOf(route) + 1} of ${\n          routes.length\n        }`;\n      }\n\n      return undefined;\n    };\n\n    _getTestID = ({ route }: { route: NavigationRoute }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const options = descriptor.options;\n\n      return options.tabBarTestID;\n    };\n\n    _makeDefaultHandler = ({\n      route,\n      navigation,\n    }: {\n      route: NavigationRoute;\n      navigation: NavigationTabProp;\n    }) => () => {\n      if (navigation.isFocused()) {\n        if (route.hasOwnProperty('index') && route.index > 0) {\n          // If current tab has a nested navigator, pop to top\n          navigation.dispatch(StackActions.popToTop({ key: route.key }));\n        } else {\n          navigation.emit('refocus');\n        }\n      } else {\n        this._jumpTo(route.routeName);\n      }\n    };\n\n    _handleTabPress = ({ route }: { route: NavigationRoute }) => {\n      this._isTabPress = true;\n\n      // After tab press, handleIndexChange will be called synchronously\n      // So we reset it in promise callback\n      Promise.resolve().then(() => (this._isTabPress = false));\n\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const { navigation, options } = descriptor;\n\n      const defaultHandler = this._makeDefaultHandler({ route, navigation });\n\n      if (options.tabBarOnPress) {\n        options.tabBarOnPress({ navigation, defaultHandler });\n      } else {\n        defaultHandler();\n      }\n    };\n\n    _handleTabLongPress = ({ route }: { route: NavigationRoute }) => {\n      const { descriptors } = this.props;\n      const descriptor = descriptors[route.key];\n      const { navigation, options } = descriptor;\n\n      const defaultHandler = this._makeDefaultHandler({ route, navigation });\n\n      if (options.tabBarOnLongPress) {\n        options.tabBarOnLongPress({ navigation, defaultHandler });\n      } else {\n        defaultHandler();\n      }\n    };\n\n    _handleIndexChange = (index: number) => {\n      if (this._isTabPress) {\n        this._isTabPress = false;\n        return;\n      }\n\n      this._jumpTo(this.props.navigation.state.routes[index].routeName);\n    };\n\n    _jumpTo = (routeName: string) => {\n      const { navigation } = this.props;\n\n      navigation.dispatch(\n        SwitchActions.jumpTo({\n          routeName,\n          key: navigation.state.key,\n        })\n      );\n    };\n\n    _isTabPress: boolean = false;\n\n    render() {\n      const {\n        descriptors,\n        navigation,\n        screenProps,\n        navigationConfig,\n      } = this.props;\n      const { state } = navigation;\n      const route = state.routes[state.index];\n      const descriptor = descriptors[route.key];\n\n      return (\n        // TODO: don't have time to fix it right now\n        // @ts-ignore\n        <TabView\n          {...navigationConfig}\n          {...descriptor.options}\n          getLabelText={this._getLabelText}\n          getAccessibilityLabel={this._getAccessibilityLabel}\n          getTestID={this._getTestID}\n          renderIcon={this._renderIcon}\n          renderScene={this._renderScene}\n          onIndexChange={this._handleIndexChange}\n          onTabPress={this._handleTabPress}\n          onTabLongPress={this._handleTabLongPress}\n          navigation={navigation}\n          descriptors={descriptors}\n          screenProps={screenProps}\n        />\n      );\n    }\n  }\n\n  return (\n    routes: RouteConfig<Options>,\n    config: CreateNavigatorConfig<\n      Partial<Config>,\n      NavigationTabRouterConfig,\n      Partial<Options>,\n      NavigationTabProp<NavigationRoute, any>\n    > = {}\n  ) => {\n    const router = TabRouter(routes, config as any);\n\n    return createNavigator(NavigationView as any, router, config as any);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}