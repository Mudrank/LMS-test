{"ast":null,"code":"export default function getChildRouter(router,routeName){var _router$childRouters;if((_router$childRouters=router.childRouters)===null||_router$childRouters===void 0?void 0:_router$childRouters[routeName]){return router.childRouters[routeName];}var Component=router.getComponentForRouteName(routeName);return Component.router;}","map":{"version":3,"sources":["getChildRouter.ts"],"names":["router","Component"],"mappings":"AAAA,cAAe,SAAA,CAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAwD,CAAA,GAAA,CAAA,oBAAA,CACrE,GAAA,CAAA,oBAAA,CAAIA,MAAM,CAAV,YAAA,IAAA,IAAA,EAAA,oBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAIA,oBAAAA,CAAJ,SAAIA,CAAJ,CAAsC,CACpC,MAAOA,CAAAA,MAAM,CAANA,YAAAA,CAAP,SAAOA,CAAP,CACD,CAED,GAAMC,CAAAA,SAAS,CAAGD,MAAM,CAANA,wBAAAA,CAAlB,SAAkBA,CAAlB,CAEA,MAAOC,CAAAA,SAAS,CAAhB,MAAA,CACD","sourcesContent":["export default function getChildRouter(router: any, routeName: string) {\n  if (router.childRouters?.[routeName]) {\n    return router.childRouters[routeName];\n  }\n\n  const Component = router.getComponentForRouteName(routeName);\n\n  return Component.router;\n}\n"]},"metadata":{},"sourceType":"module"}