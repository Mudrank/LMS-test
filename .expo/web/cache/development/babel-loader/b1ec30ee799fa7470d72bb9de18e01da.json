{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mudrank Gupta\\\\OneDrive\\\\WHJR\\\\Pro\\\\LMS-test\\\\Screens\\\\SearchScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search() {\n    _classCallCheck(this, Search);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        style: styles.icon,\n        name: \"search\",\n        color: \"#7f5af0\",\n        size: 27,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, \"Search\")), React.createElement(TextInput, {\n        placeholder: \"Search Book/Student Id\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            search: text\n          });\n        },\n        value: this.state.scannedBookId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.searchTransaction(_this.state.search);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Search\")), React.createElement(FlatList, {\n        data: this.state.allTransactions,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              borderBottomWidth: 2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }\n          }, \"BookId:\" + item.bookId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }\n          }, \"studentId:\" + item.studentId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }\n          }, \"transaction:\" + item.transactionType), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }\n          }, \"Date: \" + item.date));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReached: this.fetchData,\n        onEndReachedThreshold: 0.7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#16161a\"\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  icon: {\n    padding: 10\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"#fffffe\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/LMS-test/Screens/SearchScreen.js"],"names":["React","Icon","Search","styles","container","row","icon","title","text","setState","search","state","scannedBookId","searchTransaction","allTransactions","item","borderBottomWidth","bookId","studentId","transactionType","date","index","toString","fetchData","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","flexDirection","padding","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, TextInput } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\n\r\nexport default class Search extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.row}>\r\n          <Icon style={styles.icon} name=\"search\" color=\"#7f5af0\" size={27} />\r\n          <Text style={styles.title}>Search</Text>\r\n        </View>\r\n        <TextInput\r\n          placeholder=\"Search Book/Student Id\"\r\n          onChangeText={(text) => {\r\n            this.setState({ search: text });\r\n          }}\r\n          value={this.state.scannedBookId}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            this.searchTransaction(this.state.search);\r\n          }}\r\n        >\r\n          <Text>Search</Text>\r\n        </TouchableOpacity>\r\n\r\n        <FlatList\r\n          data={this.state.allTransactions}\r\n          renderItem={({ item }) => (\r\n            <View style={{ borderBottomWidth: 2 }}>\r\n              <Text>{\"BookId:\" + item.bookId}</Text>\r\n              <Text>{\"studentId:\" + item.studentId}</Text>\r\n              <Text>{\"transaction:\" + item.transactionType}</Text>\r\n              <Text>{\"Date: \" + item.date}</Text>\r\n            </View>\r\n          )}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          onEndReached={this.fetchData}\r\n          onEndReachedThreshold={0.7}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#16161a\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n  icon: {\r\n    padding: 10,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#fffffe\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}