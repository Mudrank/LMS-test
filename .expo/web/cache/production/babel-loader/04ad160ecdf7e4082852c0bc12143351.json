{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Animated from'react-native-reanimated';var event=Animated.event,divide=Animated.divide,onChange=Animated.onChange,cond=Animated.cond,eq=Animated.eq,round=Animated.round,call=Animated.call,Value=Animated.Value;var ScrollPager=function(_React$Component){_inherits(ScrollPager,_React$Component);var _super=_createSuper(ScrollPager);function ScrollPager(){var _this;_classCallCheck(this,ScrollPager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"initialOffset\",{x:_this.props.navigationState.index*_this.props.layout.width,y:0});_defineProperty(_assertThisInitialized(_this),\"wasTouched\",false);_defineProperty(_assertThisInitialized(_this),\"interactionHandle\",null);_defineProperty(_assertThisInitialized(_this),\"scrollViewRef\",React.createRef());_defineProperty(_assertThisInitialized(_this),\"jumpTo\",function(key){_this.wasTouched=false;var _this$props=_this.props,navigationState=_this$props.navigationState,keyboardDismissMode=_this$props.keyboardDismissMode,onIndexChange=_this$props.onIndexChange;var index=navigationState.routes.findIndex(function(route){return route.key===key;});if(navigationState.index===index){_this.scrollTo(index*_this.props.layout.width);}else{onIndexChange(index);if(keyboardDismissMode==='auto'){Keyboard.dismiss();}}});_defineProperty(_assertThisInitialized(_this),\"scrollTo\",function(x){var animated=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(_this.scrollViewRef.current){var _this$scrollViewRef$c,_this$scrollViewRef$c2;var scrollView=typeof((_this$scrollViewRef$c=_this.scrollViewRef.current)===null||_this$scrollViewRef$c===void 0?void 0:_this$scrollViewRef$c.scrollTo)==='function'?_this.scrollViewRef.current:(_this$scrollViewRef$c2=_this.scrollViewRef.current)===null||_this$scrollViewRef$c2===void 0?void 0:_this$scrollViewRef$c2.getNode();scrollView===null||scrollView===void 0?void 0:scrollView.scrollTo({x:x,animated:animated});}});_defineProperty(_assertThisInitialized(_this),\"enterListeners\",[]);_defineProperty(_assertThisInitialized(_this),\"addListener\",function(type,listener){switch(type){case'enter':_this.enterListeners.push(listener);break;}});_defineProperty(_assertThisInitialized(_this),\"removeListener\",function(type,listener){switch(type){case'enter':{var index=_this.enterListeners.indexOf(listener);if(index>-1){_this.enterListeners.splice(index,1);}break;}}});_defineProperty(_assertThisInitialized(_this),\"position\",new Animated.Value(_this.props.navigationState.index*_this.props.layout.width));_defineProperty(_assertThisInitialized(_this),\"onScroll\",event([{nativeEvent:{contentOffset:{x:_this.position}}}]));_defineProperty(_assertThisInitialized(_this),\"layoutWidthNode\",new Value(_this.props.layout.width));_defineProperty(_assertThisInitialized(_this),\"relativePosition\",divide(_this.position,_this.layoutWidthNode));return _this;}_createClass(ScrollPager,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.layout.width){this.scrollTo(this.props.navigationState.index*this.props.layout.width,false);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var offset=this.props.navigationState.index*this.props.layout.width;if(prevProps.navigationState.routes.length!==this.props.navigationState.routes.length||prevProps.layout.width!==this.props.layout.width){this.scrollTo(offset,false);}else if(prevProps.navigationState.index!==this.props.navigationState.index){this.scrollTo(offset);}if(prevProps.layout.width!==this.props.layout.width){this.layoutWidthNode.setValue(this.props.layout.width);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.interactionHandle!==null){InteractionManager.clearInteractionHandle(this.interactionHandle);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,children=_this$props2.children,layout=_this$props2.layout,onSwipeStart=_this$props2.onSwipeStart,onSwipeEnd=_this$props2.onSwipeEnd,overscroll=_this$props2.overscroll,onIndexChange=_this$props2.onIndexChange,navigationState=_this$props2.navigationState;var handleSwipeStart=function handleSwipeStart(){_this2.wasTouched=false;onSwipeStart===null||onSwipeStart===void 0?void 0:onSwipeStart();_this2.interactionHandle=InteractionManager.createInteractionHandle();};var handleSwipeEnd=function handleSwipeEnd(){_this2.wasTouched=true;onSwipeEnd===null||onSwipeEnd===void 0?void 0:onSwipeEnd();if(_this2.interactionHandle!==null){InteractionManager.clearInteractionHandle(_this2.interactionHandle);}};return children({position:this.relativePosition,addListener:this.addListener,removeListener:this.removeListener,jumpTo:this.jumpTo,render:function render(children){return React.createElement(Animated.ScrollView,{pagingEnabled:true,directionalLockEnabled:true,keyboardDismissMode:\"on-drag\",keyboardShouldPersistTaps:\"always\",overScrollMode:\"never\",scrollToOverflowEnabled:true,scrollEnabled:_this2.props.swipeEnabled,automaticallyAdjustContentInsets:false,bounces:overscroll,scrollsToTop:false,showsHorizontalScrollIndicator:false,scrollEventThrottle:1,onScroll:_this2.onScroll,onScrollBeginDrag:handleSwipeStart,onScrollEndDrag:handleSwipeEnd,onMomentumScrollEnd:_this2.onScroll,contentOffset:_this2.initialOffset,style:styles.container,contentContainerStyle:layout.width?{flexDirection:'row',width:layout.width*navigationState.routes.length,flex:1}:null,ref:_this2.scrollViewRef},children,React.createElement(Animated.Code,{exec:onChange(_this2.relativePosition,cond(eq(round(_this2.relativePosition),_this2.relativePosition),[call([_this2.relativePosition],function(_ref){var _ref2=_slicedToArray(_ref,1),relativePosition=_ref2[0];if(_this2.wasTouched){onIndexChange(relativePosition);_this2.wasTouched=false;}})]))}));}});}}]);return ScrollPager;}(React.Component);export{ScrollPager as default};_defineProperty(ScrollPager,\"defaultProps\",{bounces:true});var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["ScrollPager.tsx"],"names":["Value","ScrollPager","React","bounces","componentDidMount","componentDidUpdate","offset","prevProps","componentWillUnmount","InteractionManager","x","y","key","onIndexChange","index","navigationState","route","keyboardDismissMode","Keyboard","animated","scrollView","Animated","event","nativeEvent","contentOffset","position","divide","render","handleSwipeStart","onSwipeStart","handleSwipeEnd","onSwipeEnd","children","addListener","removeListener","jumpTo","styles","flexDirection","width","layout","flex","scrollViewRef","onChange","cond","eq","round","call","container"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Keyboard, InteractionManager } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { Props } from './Pager';\nimport { Route, Listener } from './types';\n\nconst { event, divide, onChange, cond, eq, round, call, Value } = Animated;\n\ntype State = {\n  initialOffset: { x: number; y: number };\n};\n\nexport default class ScrollPager<T extends Route> extends React.Component<\n  Props<T> & { overscroll?: boolean },\n  State\n> {\n  static defaultProps = {\n    bounces: true,\n  };\n\n  componentDidMount() {\n    if (this.props.layout.width) {\n      this.scrollTo(\n        this.props.navigationState.index * this.props.layout.width,\n        false\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const offset = this.props.navigationState.index * this.props.layout.width;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this.scrollTo(offset, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this.scrollTo(offset);\n    }\n\n    if (prevProps.layout.width !== this.props.layout.width) {\n      this.layoutWidthNode.setValue(this.props.layout.width);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interactionHandle !== null) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n    }\n  }\n\n  private initialOffset = {\n    x: this.props.navigationState.index * this.props.layout.width,\n    y: 0,\n  };\n\n  private wasTouched: boolean = false;\n\n  // InteractionHandle to handle tasks around animations\n  private interactionHandle: number | null = null;\n\n  private scrollViewRef = React.createRef<Animated.ScrollView>();\n\n  private jumpTo = (key: string) => {\n    this.wasTouched = false;\n    const { navigationState, keyboardDismissMode, onIndexChange } = this.props;\n\n    const index = navigationState.routes.findIndex(\n      (route) => route.key === key\n    );\n\n    if (navigationState.index === index) {\n      this.scrollTo(index * this.props.layout.width);\n    } else {\n      onIndexChange(index);\n      if (keyboardDismissMode === 'auto') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private scrollTo = (x: number, animated = true) => {\n    if (this.scrollViewRef.current) {\n      // getNode() is not necessary in newer versions of React Native\n      const scrollView =\n        // @ts-ignore\n        typeof this.scrollViewRef.current?.scrollTo === 'function'\n          ? this.scrollViewRef.current\n          : this.scrollViewRef.current?.getNode();\n\n      // @ts-ignore\n      scrollView?.scrollTo({\n        x,\n        animated: animated,\n      });\n    }\n  };\n\n  private enterListeners: Listener[] = [];\n\n  private addListener = (type: 'enter', listener: Listener) => {\n    switch (type) {\n      case 'enter':\n        this.enterListeners.push(listener);\n        break;\n    }\n  };\n\n  private removeListener = (type: 'enter', listener: Listener) => {\n    switch (type) {\n      case 'enter': {\n        const index = this.enterListeners.indexOf(listener);\n\n        if (index > -1) {\n          this.enterListeners.splice(index, 1);\n        }\n\n        break;\n      }\n    }\n  };\n\n  private position = new Animated.Value(\n    this.props.navigationState.index * this.props.layout.width\n  );\n\n  private onScroll = event([\n    {\n      nativeEvent: {\n        contentOffset: {\n          x: this.position,\n        },\n      },\n    },\n  ]);\n\n  private layoutWidthNode = new Value(this.props.layout.width);\n\n  private relativePosition = divide(this.position, this.layoutWidthNode);\n\n  render() {\n    const {\n      children,\n      layout,\n      onSwipeStart,\n      onSwipeEnd,\n      overscroll,\n      onIndexChange,\n      navigationState,\n    } = this.props;\n\n    const handleSwipeStart = () => {\n      this.wasTouched = false;\n      onSwipeStart?.();\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    };\n\n    const handleSwipeEnd = () => {\n      this.wasTouched = true;\n      onSwipeEnd?.();\n      if (this.interactionHandle !== null) {\n        InteractionManager.clearInteractionHandle(this.interactionHandle);\n      }\n    };\n\n    return children({\n      position: this.relativePosition,\n      addListener: this.addListener,\n      removeListener: this.removeListener,\n      jumpTo: this.jumpTo,\n      render: (children) => (\n        <Animated.ScrollView\n          pagingEnabled\n          directionalLockEnabled\n          keyboardDismissMode=\"on-drag\"\n          keyboardShouldPersistTaps=\"always\"\n          overScrollMode=\"never\"\n          scrollToOverflowEnabled\n          scrollEnabled={this.props.swipeEnabled}\n          automaticallyAdjustContentInsets={false}\n          bounces={overscroll}\n          scrollsToTop={false}\n          showsHorizontalScrollIndicator={false}\n          scrollEventThrottle={1}\n          onScroll={this.onScroll}\n          onScrollBeginDrag={handleSwipeStart}\n          onScrollEndDrag={handleSwipeEnd}\n          onMomentumScrollEnd={this.onScroll}\n          contentOffset={this.initialOffset}\n          style={styles.container}\n          contentContainerStyle={\n            layout.width\n              ? {\n                  flexDirection: 'row',\n                  width: layout.width * navigationState.routes.length,\n                  flex: 1,\n                }\n              : null\n          }\n          ref={this.scrollViewRef}\n        >\n          {children}\n          <Animated.Code\n            exec={onChange(\n              this.relativePosition,\n              cond(eq(round(this.relativePosition), this.relativePosition), [\n                call([this.relativePosition], ([relativePosition]) => {\n                  if (this.wasTouched) {\n                    onIndexChange(relativePosition);\n                    this.wasTouched = false;\n                  }\n                }),\n              ])\n            )}\n          />\n        </Animated.ScrollView>\n      ),\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}