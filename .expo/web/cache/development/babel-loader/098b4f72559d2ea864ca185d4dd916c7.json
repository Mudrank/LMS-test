{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mudrank Gupta\\\\OneDrive\\\\WHJR\\\\Pro\\\\LMS-test\\\\Screens\\\\Transaction.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport * as firebase from \"firebase\";\nimport db from \"../config.js\";\n\nvar Transaction = function (_React$Component) {\n  _inherits(Transaction, _React$Component);\n\n  var _super = _createSuper(Transaction);\n\n  function Transaction() {\n    var _this;\n\n    _classCallCheck(this, Transaction);\n\n    _this = _super.call(this);\n\n    _this.getCamPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              console.log(status);\n\n              _this.setState({\n                hasPermission: status === \"granted\",\n                btnState: id,\n                scanned: false\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleScan = function _callee2(_ref) {\n      var type, data, btnState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              btnState = _this.state.btnState;\n\n              if (btnState === \"bookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  btnState: \"normal\"\n                });\n              } else if (btnState === \"studentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  btnState: \"normal\"\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var transactionType, isStudentElgible;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookElgiblity);\n\n            case 2:\n              transactionType = _context3.sent;\n              console.log(transactionType);\n\n              if (transactionType) {\n                _context3.next = 9;\n                break;\n              }\n\n              alert(\"The book does don't exist in our database (yet)\");\n\n              _this.setState({\n                scannedStudentId: \" \",\n                scannedBookId: \" \"\n              });\n\n              _context3.next = 20;\n              break;\n\n            case 9:\n              if (!(transactionType === \"Issue\")) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.next = 12;\n              return _regeneratorRuntime.awrap(_this.checkStudentElgiblityBookIssue);\n\n            case 12:\n              isStudentElgible = _context3.sent;\n\n              if (isStudentElgible) {\n                _this.InitializeBookIssue;\n                alert(\"Book issued to the student\");\n              }\n\n              _context3.next = 20;\n              break;\n\n            case 16:\n              _context3.next = 18;\n              return _regeneratorRuntime.awrap(_this.checkStudentElgiblityBookReturn);\n\n            case 18:\n              isStudentElgible = _context3.sent;\n\n              if (isStudentElgible) {\n                _this.InitializeBookReturn;\n                alert(\"Book Returned!\");\n              }\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentElgiblityBookReturn = function _callee4() {\n      var transactionRef, isStudentElgible;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              transactionRef = db.collection(\"Transations\").where(\"bookId\", \"===\", _this.state.scannedBookId).limit(1).get();\n              isStudentElgible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n\n                if (lastBookTransaction.noOfBooksIssued < 2) {\n                  isStudentElgible = true;\n                } else {\n                  isStudentElgible = false;\n                  alert(\"Student has already issued 2 books\");\n\n                  _this.setState({\n                    scannedStudentId: \" \",\n                    scannedBookId: \" \"\n                  });\n                }\n              });\n              return _context4.abrupt(\"return\", isStudentElgible);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentElgiblityBookIssue = function _callee5() {\n      var studentRef, isStudentElgible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              studentRef = db.collection(\"Students\").where(\"studentId\", \"===\", _this.state.scannedStudentId).get();\n              isStudentElgible = \"\";\n\n              if (studentRef.docs.length == 0) {\n                _this.setState({\n                  scannedStudentId: \" \",\n                  scannedBookId: \" \"\n                });\n\n                isStudentElgible = false;\n                alert(\"student Id does not exist!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.noOfBooksIssued < 2) {\n                    isStudentElgible = true;\n                  } else {\n                    isStudentElgible = false;\n                    alert(\"Student has already issued 2 books\");\n\n                    _this.setState({\n                      scannedStudentId: \" \",\n                      scannedBookId: \" \"\n                    });\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", isStudentElgible);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.InitializeBookIssue = function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              db.collection(\"Transactions\").add({\n                studentId: _this.state.scannedStudentId,\n                bookId: _this.state.scannedBookId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"issued\"\n              });\n              db.collection(\"Books\").doc(_this.state.scannedBookId).update({\n                bookAvailablity: false\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentId).update({\n                noOfBooksIssued: firebase.firestore.FieldValue.increment(1)\n              });\n              alert(\"Book Issued\");\n\n              _this.setState({\n                scannedStudentId: \" \",\n                scannedBookId: \" \"\n              });\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.InitializeBookReturn = function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db.collection(\"Transactions\").add({\n                studentId: _this.state.scannedStudentId,\n                bookId: _this.state.scannedBookId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"return\"\n              });\n              db.collection(\"Books\").doc(_this.state.scannedBookId).update({\n                bookAvailablity: true\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentId).update({\n                noOfBooksIssued: firebase.firestore.FieldValue.increment(-1)\n              });\n              alert(\"Book Returned\");\n\n              _this.setState({\n                scannedStudentId: \" \",\n                scannedBookId: \" \"\n              });\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasPermission: null,\n      scanned: false,\n      scannedStudentId: false,\n      scannedBookId: false,\n      scannedData: \" \",\n      btnState: \"normal\",\n      transactionMsg: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Transaction, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.hasPermission && this.state.btnState === true) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: this.state.scanned ? undefined : this.handleScan,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 9\n          }\n        }, React.createElement(KeyboardAvoidingView, {\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }\n        }, React.createElement(Icon, {\n          style: styles.icon,\n          name: \"money-check\",\n          color: \"#7f5af0\",\n          size: 27,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }\n        }, \"Transactions\")), React.createElement(TextInput, {\n          placeholder: \"Student Id\",\n          keyboardAppearance: \"dark\",\n          style: styles.input,\n          onChangeText: function onChangeText(txt) {\n            _this2.setState({\n              scannedStudentId: txt\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scan,\n          onPress: this.getCamPermissions(this.state.scannedStudentId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }\n        }, \"Scan Student Id \")), React.createElement(TextInput, {\n          placeholder: \"Book Id\",\n          keyboardAppearance: \"dark\",\n          style: styles.input,\n          onChangeText: function onChangeText(txt) {\n            _this2.setState({\n              scannedBookId: txt\n            });\n          },\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scan,\n          onPress: this.getCamPermissions(this.state.scannedBookId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }\n        }, \"Scan Book Id \")), React.createElement(TouchableOpacity, {\n          style: styles.scan,\n          onPress: this.handleTransaction(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }\n        }, \"Submit \"))));\n      }\n    }\n  }]);\n\n  return Transaction;\n}(React.Component);\n\nexport { Transaction as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#16161a\"\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  icon: {\n    padding: 10\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"#fffffe\"\n  },\n  scan: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/LMS-test/Screens/Transaction.js"],"names":["React","Permissions","BarCodeScanner","Icon","firebase","db","Transaction","getCamPermissions","id","askAsync","CAMERA","status","console","log","setState","hasPermission","btnState","scanned","handleScan","type","data","state","scannedBookId","scannedStudentId","handleTransaction","checkBookElgiblity","transactionType","alert","checkStudentElgiblityBookIssue","isStudentElgible","InitializeBookIssue","checkStudentElgiblityBookReturn","InitializeBookReturn","transactionRef","collection","where","limit","get","docs","map","doc","lastBookTransaction","noOfBooksIssued","studentRef","length","student","add","studentId","bookId","date","firestore","Timestamp","now","toDate","update","bookAvailablity","FieldValue","increment","scannedData","transactionMsg","undefined","StyleSheet","absoluteFillObject","styles","container","row","icon","title","input","txt","scan","Component","create","flex","alignItems","justifyContent","backgroundColor","flexDirection","padding","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  ToastAndroid,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\n\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\n\r\nimport * as firebase from \"firebase\";\r\nimport db from \"../config.js\";\r\n\r\nexport default class Transaction extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasPermission: null,\r\n      scanned: false,\r\n      scannedStudentId: false,\r\n      scannedBookId: false,\r\n      scannedData: \" \",\r\n      btnState: \"normal\",\r\n      transactionMsg: \"\",\r\n    };\r\n  }\r\n\r\n  getCamPermissions = async (id) => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n    console.log(status);\r\n    this.setState({\r\n      hasPermission: status === \"granted\",\r\n      btnState: id,\r\n      scanned: false,\r\n    });\r\n  };\r\n\r\n  handleScan = async ({ type, data }) => {\r\n    const { btnState } = this.state;\r\n\r\n    if (btnState === \"bookId\") {\r\n      this.setState({\r\n        scanned: true,\r\n        scannedBookId: data,\r\n        btnState: \"normal\",\r\n      });\r\n    } else if (btnState === \"studentId\") {\r\n      this.setState({\r\n        scanned: true,\r\n        scannedStudentId: data,\r\n        btnState: \"normal\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleTransaction = async () => {\r\n    var transactionType = await this.checkBookElgiblity;\r\n\r\n    console.log(transactionType);\r\n\r\n    if (!transactionType) {\r\n      alert(\"The book does don't exist in our database (yet)\");\r\n\r\n      this.setState({\r\n        scannedStudentId: \" \",\r\n        scannedBookId: \" \",\r\n      });\r\n    } else if (transactionType === \"Issue\") {\r\n      var isStudentElgible = await this.checkStudentElgiblityBookIssue;\r\n\r\n      if (isStudentElgible) {\r\n        this.InitializeBookIssue;\r\n        alert(\"Book issued to the student\");\r\n      }\r\n    } else {\r\n      var isStudentElgible = await this.checkStudentElgiblityBookReturn;\r\n      if (isStudentElgible) {\r\n        this.InitializeBookReturn;\r\n        alert(\"Book Returned!\");\r\n      }\r\n    }\r\n\r\n   \r\n  };\r\n\r\n  \r\n\r\n  checkStudentElgiblityBookReturn = async () => {\r\n    const transactionRef = db\r\n      .collection(\"Transations\")\r\n      .where(\"bookId\", \"===\", this.state.scannedBookId)\r\n      .limit(1)\r\n      .get();\r\n    var isStudentElgible = \"\";\r\n    transactionRef.docs.map((doc) => {\r\n      var lastBookTransaction = doc.data();\r\n      if (lastBookTransaction.noOfBooksIssued < 2) {\r\n        isStudentElgible = true;\r\n      } else {\r\n        isStudentElgible = false;\r\n        alert(\"Student has already issued 2 books\");\r\n\r\n        this.setState({\r\n          scannedStudentId: \" \",\r\n          scannedBookId: \" \",\r\n        });\r\n      }\r\n    });\r\n\r\n    return isStudentElgible;\r\n  };\r\n\r\n  checkStudentElgiblityBookIssue = async () => {\r\n    const studentRef = db\r\n      .collection(\"Students\")\r\n      .where(\"studentId\", \"===\", this.state.scannedStudentId)\r\n      .get();\r\n    var isStudentElgible = \"\";\r\n    if (studentRef.docs.length == 0) {\r\n      this.setState({\r\n        scannedStudentId: \" \",\r\n        scannedBookId: \" \",\r\n      });\r\n\r\n      isStudentElgible = false;\r\n      alert(\"student Id does not exist!\");\r\n    } else {\r\n      studentRef.docs.map((doc) => {\r\n        var student = doc.data();\r\n        if (student.noOfBooksIssued < 2) {\r\n          isStudentElgible = true;\r\n        } else {\r\n          isStudentElgible = false;\r\n          alert(\"Student has already issued 2 books\");\r\n\r\n          this.setState({\r\n            scannedStudentId: \" \",\r\n            scannedBookId: \" \",\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return isStudentElgible;\r\n  };\r\n\r\n  InitializeBookIssue = async () => {\r\n    db.collection(\"Transactions\").add({\r\n      studentId: this.state.scannedStudentId,\r\n      bookId: this.state.scannedBookId,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transactionType: \"issued\",\r\n    });\r\n    db.collection(\"Books\").doc(this.state.scannedBookId).update({\r\n      bookAvailablity: false,\r\n    });\r\n    db.collection(\"Students\")\r\n      .doc(this.state.scannedStudentId)\r\n      .update({\r\n        noOfBooksIssued: firebase.firestore.FieldValue.increment(1),\r\n      });\r\n    alert(\"Book Issued\");\r\n\r\n    this.setState({\r\n      scannedStudentId: \" \",\r\n      scannedBookId: \" \",\r\n    });\r\n  };\r\n\r\n  InitializeBookReturn = async () => {\r\n    db.collection(\"Transactions\").add({\r\n      studentId: this.state.scannedStudentId,\r\n      bookId: this.state.scannedBookId,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transactionType: \"return\",\r\n    });\r\n    db.collection(\"Books\").doc(this.state.scannedBookId).update({\r\n      bookAvailablity: true,\r\n    });\r\n    db.collection(\"Students\")\r\n      .doc(this.state.scannedStudentId)\r\n      .update({\r\n        noOfBooksIssued: firebase.firestore.FieldValue.increment(-1),\r\n      });\r\n    alert(\"Book Returned\");\r\n\r\n    this.setState({\r\n      scannedStudentId: \" \",\r\n      scannedBookId: \" \",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasPermission && this.state.btnState === true) {\r\n      return (\r\n        <BarCodeScanner\r\n          onBarCodeScanned={this.state.scanned ? undefined : this.handleScan}\r\n          style={StyleSheet.absoluteFillObject}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n          <KeyboardAvoidingView behavior=\"padding\" enabled>\r\n            <View style={styles.row}>\r\n              <Icon\r\n                style={styles.icon}\r\n                name=\"money-check\"\r\n                color=\"#7f5af0\"\r\n                size={27}\r\n              />\r\n              <Text style={styles.title}>Transactions</Text>\r\n            </View>\r\n\r\n            <TextInput\r\n              placeholder=\"Student Id\"\r\n              keyboardAppearance=\"dark\"\r\n              style={styles.input}\r\n              onChangeText={(txt) => {\r\n                this.setState({\r\n                  scannedStudentId: txt,\r\n                });\r\n              }}\r\n              value={this.state.scannedStudentId}\r\n            ></TextInput>\r\n\r\n            <TouchableOpacity\r\n              style={styles.scan}\r\n              onPress={this.getCamPermissions(this.state.scannedStudentId)}\r\n            >\r\n              <Text>Scan Student Id </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TextInput\r\n              placeholder=\"Book Id\"\r\n              keyboardAppearance=\"dark\"\r\n              style={styles.input}\r\n              onChangeText={(txt) => {\r\n                this.setState({\r\n                  scannedBookId: txt,\r\n                });\r\n              }}\r\n              value={this.state.scannedBookId}\r\n            ></TextInput>\r\n\r\n            <TouchableOpacity\r\n              style={styles.scan}\r\n              onPress={this.getCamPermissions(this.state.scannedBookId)}\r\n            >\r\n              <Text>Scan Book Id </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              style={styles.scan}\r\n              onPress={this.handleTransaction()}\r\n            >\r\n              <Text>Submit </Text>\r\n            </TouchableOpacity>\r\n          </KeyboardAvoidingView>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#16161a\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n  icon: {\r\n    padding: 10,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#fffffe\",\r\n  },\r\n  scan: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}