{"ast":null,"code":"import{createAnimatedPropAdapter}from\"./core\";export var SVGAdapter=createAnimatedPropAdapter(function(props){'worklet';var _a,_b;var keys=Object.keys(props);if(keys.includes('transform')){if(Array.isArray(props.transform)){if(props.transform.length!==6){throw new Error(\"invalid transform length of \"+props.transform.length+\", should be 6\");}var transform=props.transform;var x=(_a=props.x)!==null&&_a!==void 0?_a:0;var y=(_b=props.y)!==null&&_b!==void 0?_b:0;props.transform=[{translateX:transform[0]*x+transform[2]*y+transform[4]},{translateY:transform[1]*x+transform[3]*y+transform[5]}];}else if(typeof props.transform==='string'){var arr=props.transform.replace('translate(','').replace(')','').split(' ');props.transform=[{translateX:parseFloat(arr[0])},{translateY:parseFloat(arr[1])}];}}});export var TextInputAdapter=createAnimatedPropAdapter(function(props){'worklet';var keys=Object.keys(props);if(keys.includes('value')){props.text=props.value;delete props.value;}},['text']);","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/Wireless-Library-management/node_modules/react-native-reanimated/lib/reanimated2/PropAdapters.js"],"names":["createAnimatedPropAdapter","SVGAdapter","props","_a","_b","keys","Object","includes","Array","isArray","transform","length","Error","x","y","translateX","translateY","arr","replace","split","parseFloat","TextInputAdapter","text","value"],"mappings":"AAEA,OAASA,yBAAT,cACA,MAAO,IAAMC,CAAAA,UAAU,CAAGD,yBAAyB,CAAC,SAACE,KAAD,CAAW,CAC3D,UACA,GAAIC,CAAAA,EAAJ,CAAQC,EAAR,CACA,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYH,KAAZ,CAAb,CAEA,GAAIG,IAAI,CAACE,QAAL,CAAc,WAAd,CAAJ,CAAgC,CAC5B,GAAIC,KAAK,CAACC,OAAN,CAAcP,KAAK,CAACQ,SAApB,CAAJ,CAAoC,CAEhC,GAAIR,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,GAA2B,CAA/B,CAAkC,CAC9B,KAAM,IAAIC,CAAAA,KAAJ,gCAAyCV,KAAK,CAACQ,SAAN,CAAgBC,MAAzD,iBAAN,CACH,CACD,GAAMD,CAAAA,SAAS,CAAGR,KAAK,CAACQ,SAAxB,CACA,GAAMG,CAAAA,CAAC,CAAG,CAACV,EAAE,CAAGD,KAAK,CAACW,CAAZ,IAAmB,IAAnB,EAA2BV,EAAE,GAAK,IAAK,EAAvC,CAA2CA,EAA3C,CAAgD,CAA1D,CACA,GAAMW,CAAAA,CAAC,CAAG,CAACV,EAAE,CAAGF,KAAK,CAACY,CAAZ,IAAmB,IAAnB,EAA2BV,EAAE,GAAK,IAAK,EAAvC,CAA2CA,EAA3C,CAAgD,CAA1D,CACAF,KAAK,CAACQ,SAAN,CAAkB,CACd,CAAEK,UAAU,CAAEL,SAAS,CAAC,CAAD,CAAT,CAAeG,CAAf,CAAmBH,SAAS,CAAC,CAAD,CAAT,CAAeI,CAAlC,CAAsCJ,SAAS,CAAC,CAAD,CAA7D,CADc,CAEd,CAAEM,UAAU,CAAEN,SAAS,CAAC,CAAD,CAAT,CAAeG,CAAf,CAAmBH,SAAS,CAAC,CAAD,CAAT,CAAeI,CAAlC,CAAsCJ,SAAS,CAAC,CAAD,CAA7D,CAFc,CAAlB,CAIH,CAZD,IAaK,IAAI,MAAOR,CAAAA,KAAK,CAACQ,SAAb,GAA2B,QAA/B,CAAyC,CAG1C,GAAMO,CAAAA,GAAG,CAAGf,KAAK,CAACQ,SAAN,CACPQ,OADO,CACC,YADD,CACe,EADf,EAEPA,OAFO,CAEC,GAFD,CAEM,EAFN,EAGPC,KAHO,CAGD,GAHC,CAAZ,CAIAjB,KAAK,CAACQ,SAAN,CAAkB,CACd,CAAEK,UAAU,CAAEK,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAxB,CADc,CAEd,CAAED,UAAU,CAAEI,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAxB,CAFc,CAAlB,CAIH,CACJ,CAEJ,CAjCkD,CAA5C,CAkCP,MAAO,IAAMI,CAAAA,gBAAgB,CAAGrB,yBAAyB,CAAC,SAACE,KAAD,CAAW,CACjE,UACA,GAAMG,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYH,KAAZ,CAAb,CAEA,GAAIG,IAAI,CAACE,QAAL,CAAc,OAAd,CAAJ,CAA4B,CACxBL,KAAK,CAACoB,IAAN,CAAapB,KAAK,CAACqB,KAAnB,CACA,MAAOrB,CAAAA,KAAK,CAACqB,KAAb,CACH,CACJ,CARwD,CAQtD,CAAC,MAAD,CARsD,CAAlD","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { createAnimatedPropAdapter } from './core';\nexport const SVGAdapter = createAnimatedPropAdapter((props) => {\n    'worklet';\n    var _a, _b;\n    const keys = Object.keys(props);\n    // transform\n    if (keys.includes('transform')) {\n        if (Array.isArray(props.transform)) {\n            // case of array with 6 values => https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/elements/Shape.tsx#L200\n            if (props.transform.length !== 6) {\n                throw new Error(`invalid transform length of ${props.transform.length}, should be 6`);\n            }\n            const transform = props.transform;\n            const x = (_a = props.x) !== null && _a !== void 0 ? _a : 0;\n            const y = (_b = props.y) !== null && _b !== void 0 ? _b : 0;\n            props.transform = [\n                { translateX: transform[0] * x + transform[2] * y + transform[4] },\n                { translateY: transform[1] * x + transform[3] * y + transform[5] },\n            ];\n        }\n        else if (typeof props.transform === 'string') {\n            // case of string 'translate(translateX translateY)'\n            // todo: handle other cases of transform string like here https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/lib/extract/extractTransform.ts#L184\n            const arr = props.transform\n                .replace('translate(', '')\n                .replace(')', '')\n                .split(' ');\n            props.transform = [\n                { translateX: parseFloat(arr[0]) },\n                { translateY: parseFloat(arr[1]) },\n            ];\n        }\n    }\n    // todo: other props\n});\nexport const TextInputAdapter = createAnimatedPropAdapter((props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // convert text to value like RN does here: https://github.com/facebook/react-native/blob/f2c6279ca497b34d5a2bfbb6f2d33dc7a7bea02a/Libraries/Components/TextInput/TextInput.js#L878\n    if (keys.includes('value')) {\n        props.text = props.value;\n        delete props.value;\n    }\n}, ['text']);\n"]},"metadata":{},"sourceType":"module"}