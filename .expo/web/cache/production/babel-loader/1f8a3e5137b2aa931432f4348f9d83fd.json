{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{GestureHandlerRootView}from'react-native-gesture-handler';import Animated from'react-native-reanimated';import TabBar from\"./TabBar\";import SceneView from\"./SceneView\";import Pager from\"./Pager\";var GestureHandlerWrapper=GestureHandlerRootView!==null&&GestureHandlerRootView!==void 0?GestureHandlerRootView:View;var TabView=function(_React$Component){_inherits(TabView,_React$Component);var _super=_createSuper(TabView);function TabView(){var _this;_classCallCheck(this,TabView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{layout:_objectSpread({width:0,height:0},_this.props.initialLayout)});_defineProperty(_assertThisInitialized(_this),\"jumpToIndex\",function(index){if(index!==_this.props.navigationState.index){_this.props.onIndexChange(index);}});_defineProperty(_assertThisInitialized(_this),\"handleLayout\",function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;if(_this.state.layout.width===width&&_this.state.layout.height===height){return;}_this.setState({layout:{height:height,width:width}});});return _this;}_createClass(TabView,[{key:\"render\",value:function render(){var _this$props=this.props,positionListener=_this$props.position,onSwipeStart=_this$props.onSwipeStart,onSwipeEnd=_this$props.onSwipeEnd,navigationState=_this$props.navigationState,lazy=_this$props.lazy,lazyPreloadDistance=_this$props.lazyPreloadDistance,removeClippedSubviews=_this$props.removeClippedSubviews,keyboardDismissMode=_this$props.keyboardDismissMode,swipeEnabled=_this$props.swipeEnabled,swipeVelocityImpact=_this$props.swipeVelocityImpact,timingConfig=_this$props.timingConfig,springConfig=_this$props.springConfig,tabBarPosition=_this$props.tabBarPosition,renderTabBar=_this$props.renderTabBar,renderScene=_this$props.renderScene,renderLazyPlaceholder=_this$props.renderLazyPlaceholder,sceneContainerStyle=_this$props.sceneContainerStyle,style=_this$props.style,gestureHandlerProps=_this$props.gestureHandlerProps,springVelocityScale=_this$props.springVelocityScale,renderPager=_this$props.renderPager;var layout=this.state.layout;return React.createElement(GestureHandlerWrapper,{onLayout:this.handleLayout,style:[styles.pager,style]},renderPager({navigationState:navigationState,layout:layout,keyboardDismissMode:keyboardDismissMode,swipeEnabled:swipeEnabled,swipeVelocityImpact:swipeVelocityImpact,timingConfig:timingConfig,springConfig:springConfig,onSwipeStart:onSwipeStart,onSwipeEnd:onSwipeEnd,onIndexChange:this.jumpToIndex,springVelocityScale:springVelocityScale,removeClippedSubviews:removeClippedSubviews,gestureHandlerProps:gestureHandlerProps,children:function children(_ref){var position=_ref.position,render=_ref.render,addListener=_ref.addListener,removeListener=_ref.removeListener,jumpTo=_ref.jumpTo;var sceneRendererProps={position:position,layout:layout,jumpTo:jumpTo};return React.createElement(React.Fragment,null,positionListener?React.createElement(Animated.Code,{exec:Animated.set(positionListener,position)}):null,tabBarPosition==='top'&&renderTabBar(_objectSpread(_objectSpread({},sceneRendererProps),{},{navigationState:navigationState})),render(navigationState.routes.map(function(route,i){return React.createElement(SceneView,_extends({},sceneRendererProps,{addListener:addListener,removeListener:removeListener,key:route.key,index:i,lazy:typeof lazy==='function'?lazy({route:route}):lazy,lazyPreloadDistance:lazyPreloadDistance,navigationState:navigationState,style:sceneContainerStyle}),function(_ref2){var loading=_ref2.loading;return loading?renderLazyPlaceholder({route:route}):renderScene(_objectSpread(_objectSpread({},sceneRendererProps),{},{route:route}));});})),tabBarPosition==='bottom'&&renderTabBar(_objectSpread(_objectSpread({},sceneRendererProps),{},{navigationState:navigationState})));}}));}}]);return TabView;}(React.Component);export{TabView as default};_defineProperty(TabView,\"defaultProps\",{tabBarPosition:'top',renderTabBar:function renderTabBar(props){return React.createElement(TabBar,props);},renderLazyPlaceholder:function renderLazyPlaceholder(){return null;},keyboardDismissMode:'auto',swipeEnabled:true,lazy:false,lazyPreloadDistance:0,removeClippedSubviews:false,springConfig:{},timingConfig:{},gestureHandlerProps:{},renderPager:function renderPager(props){return React.createElement(Pager,props);}});var styles=StyleSheet.create({pager:{flex:1,overflow:'hidden'}});","map":{"version":3,"sources":["TabView.tsx"],"names":["GestureHandlerWrapper","GestureHandlerRootView","TabView","React","tabBarPosition","renderTabBar","props","renderLazyPlaceholder","keyboardDismissMode","swipeEnabled","lazy","lazyPreloadDistance","removeClippedSubviews","springConfig","timingConfig","gestureHandlerProps","renderPager","layout","width","height","index","e","render","position","styles","navigationState","swipeVelocityImpact","onSwipeStart","onSwipeEnd","onIndexChange","springVelocityScale","children","jumpTo","sceneRendererProps","positionListener","Animated","route","sceneContainerStyle","loading","renderScene","pager","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport TabBar, { Props as TabBarProps } from './TabBar';\nimport SceneView from './SceneView';\nimport {\n  Layout,\n  NavigationState,\n  Route,\n  SceneRendererProps,\n  PagerCommonProps,\n} from './types';\nimport Pager, { Props as ChildProps } from './Pager';\n\nexport type Props<T extends Route> = PagerCommonProps & {\n  position?: Animated.Value<number>;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  renderScene: (\n    props: SceneRendererProps & {\n      route: T;\n    }\n  ) => React.ReactNode;\n  renderLazyPlaceholder: (props: { route: T }) => React.ReactNode;\n  renderTabBar: (\n    props: SceneRendererProps & {\n      navigationState: NavigationState<T>;\n    }\n  ) => React.ReactNode;\n  tabBarPosition: 'top' | 'bottom';\n  initialLayout?: { width?: number; height?: number };\n  lazy: ((props: { route: T }) => boolean) | boolean;\n  lazyPreloadDistance: number;\n  removeClippedSubviews?: boolean;\n  sceneContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  gestureHandlerProps: React.ComponentProps<typeof PanGestureHandler>;\n  renderPager: (props: ChildProps<T>) => React.ReactNode;\n};\n\ntype State = {\n  layout: Layout;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\nexport default class TabView<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    tabBarPosition: 'top',\n    renderTabBar: <P extends Route>(props: TabBarProps<P>) => (\n      <TabBar {...props} />\n    ),\n    renderLazyPlaceholder: () => null,\n    keyboardDismissMode: 'auto',\n    swipeEnabled: true,\n    lazy: false,\n    lazyPreloadDistance: 0,\n    removeClippedSubviews: false,\n    springConfig: {},\n    timingConfig: {},\n    gestureHandlerProps: {},\n    renderPager: (props: ChildProps<any>) => <Pager {...props} />,\n  };\n\n  state = {\n    layout: { width: 0, height: 0, ...this.props.initialLayout },\n  };\n\n  private jumpToIndex = (index: number) => {\n    if (index !== this.props.navigationState.index) {\n      this.props.onIndexChange(index);\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  render() {\n    const {\n      position: positionListener,\n      onSwipeStart,\n      onSwipeEnd,\n      navigationState,\n      lazy,\n      lazyPreloadDistance,\n      removeClippedSubviews,\n      keyboardDismissMode,\n      swipeEnabled,\n      swipeVelocityImpact,\n      timingConfig,\n      springConfig,\n      tabBarPosition,\n      renderTabBar,\n      renderScene,\n      renderLazyPlaceholder,\n      sceneContainerStyle,\n      style,\n      gestureHandlerProps,\n      springVelocityScale,\n      renderPager,\n    } = this.props;\n    const { layout } = this.state;\n\n    return (\n      <GestureHandlerWrapper\n        onLayout={this.handleLayout}\n        style={[styles.pager, style]}\n      >\n        {renderPager({\n          navigationState,\n          layout,\n          keyboardDismissMode,\n          swipeEnabled,\n          swipeVelocityImpact,\n          timingConfig,\n          springConfig,\n          onSwipeStart,\n          onSwipeEnd,\n          onIndexChange: this.jumpToIndex,\n          springVelocityScale,\n          removeClippedSubviews,\n          gestureHandlerProps,\n          children: ({\n            position,\n            render,\n            addListener,\n            removeListener,\n            jumpTo,\n          }) => {\n            // All of the props here must not change between re-renders\n            // This is crucial to optimizing the routes with PureComponent\n            const sceneRendererProps = {\n              position,\n              layout,\n              jumpTo,\n            };\n\n            return (\n              <React.Fragment>\n                {positionListener ? (\n                  <Animated.Code\n                    exec={Animated.set(positionListener, position)}\n                  />\n                ) : null}\n                {tabBarPosition === 'top' &&\n                  renderTabBar({\n                    ...sceneRendererProps,\n                    navigationState,\n                  })}\n                {render(\n                  navigationState.routes.map((route, i) => {\n                    return (\n                      <SceneView\n                        {...sceneRendererProps}\n                        addListener={addListener}\n                        removeListener={removeListener}\n                        key={route.key}\n                        index={i}\n                        lazy={\n                          typeof lazy === 'function' ? lazy({ route }) : lazy\n                        }\n                        lazyPreloadDistance={lazyPreloadDistance}\n                        navigationState={navigationState}\n                        style={sceneContainerStyle}\n                      >\n                        {({ loading }) =>\n                          loading\n                            ? renderLazyPlaceholder({ route })\n                            : renderScene({\n                                ...sceneRendererProps,\n                                route,\n                              })\n                        }\n                      </SceneView>\n                    );\n                  })\n                )}\n                {tabBarPosition === 'bottom' &&\n                  renderTabBar({\n                    ...sceneRendererProps,\n                    navigationState,\n                  })}\n              </React.Fragment>\n            );\n          },\n        })}\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  pager: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}