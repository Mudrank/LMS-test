{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty2(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import createHandler from\"./createHandler\";import PlatformConstants from\"../PlatformConstants\";export var baseProps=['id','enabled','minPointers','waitFor','simultaneousHandlers','shouldCancelWhenOutside','hitSlop','onBegan','onFailed','onCancelled','onActivated','onEnded','onGestureEvent','onHandlerStateChange'];export var TapGestureHandler=createHandler({name:'TapGestureHandler',allowedProps:[].concat(baseProps,['maxDurationMs','maxDelayMs','numberOfTaps','maxDeltaX','maxDeltaY','maxDist','minPointers']),config:{}});export var FlingGestureHandler=createHandler({name:'FlingGestureHandler',allowedProps:[].concat(baseProps,['numberOfPointers','direction']),config:{}});var ForceTouchFallback=function(_React$Component){_inherits(ForceTouchFallback,_React$Component);var _super=_createSuper(ForceTouchFallback);function ForceTouchFallback(){_classCallCheck(this,ForceTouchFallback);return _super.apply(this,arguments);}_createClass(ForceTouchFallback,[{key:\"componentDidMount\",value:function componentDidMount(){console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');}},{key:\"render\",value:function render(){return this.props.children;}}]);return ForceTouchFallback;}(React.Component);_defineProperty(ForceTouchFallback,\"forceTouchAvailable\",false);export var ForceTouchGestureHandler=PlatformConstants!==null&&PlatformConstants!==void 0&&PlatformConstants.forceTouchAvailable?createHandler({name:'ForceTouchGestureHandler',allowedProps:[].concat(baseProps,['minForce','maxForce','feedbackOnActivation']),config:{}}):ForceTouchFallback;ForceTouchGestureHandler.forceTouchAvailable=(PlatformConstants===null||PlatformConstants===void 0?void 0:PlatformConstants.forceTouchAvailable)||false;export var LongPressGestureHandler=createHandler({name:'LongPressGestureHandler',allowedProps:[].concat(baseProps,['minDurationMs','maxDist']),config:{}});function validatePanGestureHandlerProps(props){if(props.minDeltaX&&props.activeOffsetX){throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");}if(props.maxDeltaX&&props.failOffsetX){throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");}if(props.minDeltaY&&props.activeOffsetY){throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");}if(props.maxDeltaY&&props.failOffsetY){throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");}if(Array.isArray(props.activeOffsetX)&&(props.activeOffsetX[0]>0||props.activeOffsetX[1]<0)){throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");}if(Array.isArray(props.activeOffsetY)&&(props.activeOffsetY[0]>0||props.activeOffsetY[1]<0)){throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");}if(Array.isArray(props.failOffsetX)&&(props.failOffsetX[0]>0||props.failOffsetX[1]<0)){throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");}if(Array.isArray(props.failOffsetY)&&(props.failOffsetY[0]>0||props.failOffsetY[1]<0)){throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");}}function transformPanGestureHandlerProps(props){var res=_objectSpread({},props);if(props.minDeltaX!==undefined){delete res.minDeltaX;res.activeOffsetXStart=-props.minDeltaX;res.activeOffsetXEnd=props.minDeltaX;}if(props.maxDeltaX!==undefined){delete res.maxDeltaX;res.failOffsetXStart=-props.maxDeltaX;res.failOffsetXEnd=props.maxDeltaX;}if(props.minOffsetX!==undefined){delete res.minOffsetX;if(props.minOffsetX<0){res.activeOffsetXStart=props.minOffsetX;}else{res.activeOffsetXEnd=props.minOffsetX;}}if(props.minDeltaY!==undefined){delete res.minDeltaY;res.activeOffsetYStart=-props.minDeltaY;res.activeOffsetYEnd=props.minDeltaY;}if(props.maxDeltaY!==undefined){delete res.maxDeltaY;res.failOffsetYStart=-props.maxDeltaY;res.failOffsetYEnd=props.maxDeltaY;}if(props.minOffsetY!==undefined){delete res.minOffsetY;if(props.minOffsetY<0){res.activeOffsetYStart=props.minOffsetY;}else{res.activeOffsetYEnd=props.minOffsetY;}}if(props.activeOffsetX!==undefined){delete res.activeOffsetX;if(Array.isArray(props.activeOffsetX)){res.activeOffsetXStart=props.activeOffsetX[0];res.activeOffsetXEnd=props.activeOffsetX[1];}else if(props.activeOffsetX<0){res.activeOffsetXStart=props.activeOffsetX;}else{res.activeOffsetXEnd=props.activeOffsetX;}}if(props.activeOffsetY!==undefined){delete res.activeOffsetY;if(Array.isArray(props.activeOffsetY)){res.activeOffsetYStart=props.activeOffsetY[0];res.activeOffsetYEnd=props.activeOffsetY[1];}else if(props.activeOffsetY<0){res.activeOffsetYStart=props.activeOffsetY;}else{res.activeOffsetYEnd=props.activeOffsetY;}}if(props.failOffsetX!==undefined){delete res.failOffsetX;if(Array.isArray(props.failOffsetX)){res.failOffsetXStart=props.failOffsetX[0];res.failOffsetXEnd=props.failOffsetX[1];}else if(props.failOffsetX<0){res.failOffsetXStart=props.failOffsetX;}else{res.failOffsetXEnd=props.failOffsetX;}}if(props.failOffsetY!==undefined){delete res.failOffsetY;if(Array.isArray(props.failOffsetY)){res.failOffsetYStart=props.failOffsetY[0];res.failOffsetYEnd=props.failOffsetY[1];}else if(props.failOffsetY<0){res.failOffsetYStart=props.failOffsetY;}else{res.failOffsetYEnd=props.failOffsetY;}}return res;}function managePanProps(props){if(__DEV__){validatePanGestureHandlerProps(props);}return transformPanGestureHandlerProps(props);}export var PanGestureHandler=createHandler({name:'PanGestureHandler',allowedProps:[].concat(baseProps,['activeOffsetY','activeOffsetX','failOffsetY','failOffsetX','minDist','minVelocity','minVelocityX','minVelocityY','minPointers','maxPointers','avgTouches','enableTrackpadTwoFingerGesture']),config:{},transformProps:managePanProps,customNativeProps:['activeOffsetYStart','activeOffsetYEnd','activeOffsetXStart','activeOffsetXEnd','failOffsetYStart','failOffsetYEnd','failOffsetXStart','failOffsetXEnd']});export var PinchGestureHandler=createHandler({name:'PinchGestureHandler',allowedProps:baseProps,config:{}});export var RotationGestureHandler=createHandler({name:'RotationGestureHandler',allowedProps:baseProps,config:{}});","map":{"version":3,"sources":["gestureHandlers.ts"],"names":["baseProps","TapGestureHandler","createHandler","name","allowedProps","config","FlingGestureHandler","ForceTouchFallback","React","componentDidMount","console","render","ForceTouchGestureHandler","LongPressGestureHandler","props","Array","res","validatePanGestureHandlerProps","transformPanGestureHandlerProps","PanGestureHandler","transformProps","customNativeProps","PinchGestureHandler","RotationGestureHandler"],"mappings":"4hEAIA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,aAAA,uBACA,MAAA,CAAA,iBAAA,4BAkEA,MAAO,IAAMA,CAAAA,SAAS,CAAG,CAAA,IAAA,CAAA,SAAA,CAAA,aAAA,CAAA,SAAA,CAAA,sBAAA,CAAA,yBAAA,CAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,gBAAA,CAAlB,sBAAkB,CAAlB,CAqCP,MAAO,IAAMC,CAAAA,iBAAiB,CAAGC,aAAa,CAG5C,CACAC,IAAI,CADJ,mBAAA,CAEAC,YAAY,WAAE,SAAF,EAAE,eAAF,CAAE,YAAF,CAAE,cAAF,CAAE,WAAF,CAAE,WAAF,CAAE,SAAF,CAFZ,aAEY,EAFZ,CAYAC,MAAM,CAAE,EAZR,CAH4C,CAAvC,CAiCP,MAAO,IAAMC,CAAAA,mBAAmB,CAAGJ,aAAa,CAG9C,CACAC,IAAI,CADJ,qBAAA,CAEAC,YAAY,WAAE,SAAF,EAAE,kBAAF,CAFZ,WAEY,EAFZ,CAGAC,MAAM,CAAE,EAHR,CAH8C,CAAzC,C,GASP,CAAA,kB,mSAEEI,4BAAoB,CAClBC,OAAO,CAAPA,IAAAA,CAAAA,8NAAAA,EAGD,C,sBACDC,iBAAS,CACP,MAAO,MAAA,KAAA,CAAP,QAAA,CACD,C,gCAT8BH,KAAK,CAAtC,S,kBAAMD,kB,uBACyB,K,EA8B/B,MAAO,IAAMK,CAAAA,wBAAwB,CAAG,iBAAiB,GAAjB,IAAA,EAAA,iBAAiB,GAAA,IAAjB,EAAA,EAAA,iBAAiB,CAAjB,mBAAA,CACpCV,aAAa,CAGX,CACAC,IAAI,CADJ,0BAAA,CAEAC,YAAY,WAAE,SAAF,EAAE,UAAF,CAAE,UAAF,CAFZ,sBAEY,EAFZ,CAQAC,MAAM,CAAE,EARR,CAHW,CADuB,CAAjC,kBAAA,CAgBNO,wBAAD,CAAA,mBAACA,CACC,CAAA,iBAAiB,GAAjB,IAAA,EAAA,iBAAiB,GAAA,IAAjB,EAAA,CAAA,IAAA,EAAA,CAAA,iBAAiB,CAAjB,mBAAA,GADF,KAACA,CAkBD,MAAO,IAAMC,CAAAA,uBAAuB,CAAGX,aAAa,CAGlD,CACAC,IAAI,CADJ,yBAAA,CAEAC,YAAY,WAAE,SAAF,EAAE,eAAF,CAFZ,SAEY,EAFZ,CAGAC,MAAM,CAAE,EAHR,CAHkD,CAA7C,CASP,QAAA,CAAA,8BAAA,CAAA,KAAA,CAAuE,CACrE,GAAIS,KAAK,CAALA,SAAAA,EAAmBA,KAAK,CAA5B,aAAA,CAA4C,CAC1C,KAAM,IAAA,CAAA,KAAA,CAAN,8EAAM,CAAN,CAGD,CACD,GAAIA,KAAK,CAALA,SAAAA,EAAmBA,KAAK,CAA5B,WAAA,CAA0C,CACxC,KAAM,IAAA,CAAA,KAAA,CAAN,8EAAM,CAAN,CAGD,CACD,GAAIA,KAAK,CAALA,SAAAA,EAAmBA,KAAK,CAA5B,aAAA,CAA4C,CAC1C,KAAM,IAAA,CAAA,KAAA,CAAN,8EAAM,CAAN,CAGD,CACD,GAAIA,KAAK,CAALA,SAAAA,EAAmBA,KAAK,CAA5B,WAAA,CAA0C,CACxC,KAAM,IAAA,CAAA,KAAA,CAAN,8EAAM,CAAN,CAGD,CACD,GACEC,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAnBC,aAAAA,IACCD,KAAK,CAALA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAA8BA,KAAK,CAALA,aAAAA,CAAAA,CAAAA,EAFjC,CACEC,CADF,CAGE,CACA,KAAM,IAAA,CAAA,KAAA,CAAN,wFAAM,CAAN,CAGD,CAED,GACEA,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAnBC,aAAAA,IACCD,KAAK,CAALA,aAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAA8BA,KAAK,CAALA,aAAAA,CAAAA,CAAAA,EAFjC,CACEC,CADF,CAGE,CACA,KAAM,IAAA,CAAA,KAAA,CAAN,wFAAM,CAAN,CAGD,CAED,GACEA,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAnBC,WAAAA,IACCD,KAAK,CAALA,WAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAA4BA,KAAK,CAALA,WAAAA,CAAAA,CAAAA,EAF/B,CACEC,CADF,CAGE,CACA,KAAM,IAAA,CAAA,KAAA,CAAN,sFAAM,CAAN,CAGD,CAED,GACEA,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAnBC,WAAAA,IACCD,KAAK,CAALA,WAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAA4BA,KAAK,CAALA,WAAAA,CAAAA,CAAAA,EAF/B,CACEC,CADF,CAGE,CACA,KAAM,IAAA,CAAA,KAAA,CAAN,sFAAM,CAAN,CAGD,CACF,CAED,QAAA,CAAA,+BAAA,CAAA,KAAA,CAAwE,CAatE,GAAMC,CAAAA,GAAmC,kBAAQF,KAAR,CAAzC,CACA,GAAIA,KAAK,CAALA,SAAAA,GAAJ,SAAA,CAAmC,CACjC,MAAOE,CAAAA,GAAG,CAAV,SAAA,CACAA,GAAG,CAAHA,kBAAAA,CAAyB,CAACF,KAAK,CAA/BE,SAAAA,CACAA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,SAAAA,CACD,CACD,GAAIF,KAAK,CAALA,SAAAA,GAAJ,SAAA,CAAmC,CACjC,MAAOE,CAAAA,GAAG,CAAV,SAAA,CACAA,GAAG,CAAHA,gBAAAA,CAAuB,CAACF,KAAK,CAA7BE,SAAAA,CACAA,GAAG,CAAHA,cAAAA,CAAqBF,KAAK,CAA1BE,SAAAA,CACD,CACD,GAAIF,KAAK,CAALA,UAAAA,GAAJ,SAAA,CAAoC,CAClC,MAAOE,CAAAA,GAAG,CAAV,UAAA,CACA,GAAIF,KAAK,CAALA,UAAAA,CAAJ,CAAA,CAA0B,CACxBE,GAAG,CAAHA,kBAAAA,CAAyBF,KAAK,CAA9BE,UAAAA,CADF,CAAA,IAEO,CACLA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,UAAAA,CACD,CACF,CAED,GAAIF,KAAK,CAALA,SAAAA,GAAJ,SAAA,CAAmC,CACjC,MAAOE,CAAAA,GAAG,CAAV,SAAA,CACAA,GAAG,CAAHA,kBAAAA,CAAyB,CAACF,KAAK,CAA/BE,SAAAA,CACAA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,SAAAA,CACD,CACD,GAAIF,KAAK,CAALA,SAAAA,GAAJ,SAAA,CAAmC,CACjC,MAAOE,CAAAA,GAAG,CAAV,SAAA,CACAA,GAAG,CAAHA,gBAAAA,CAAuB,CAACF,KAAK,CAA7BE,SAAAA,CACAA,GAAG,CAAHA,cAAAA,CAAqBF,KAAK,CAA1BE,SAAAA,CACD,CAED,GAAIF,KAAK,CAALA,UAAAA,GAAJ,SAAA,CAAoC,CAClC,MAAOE,CAAAA,GAAG,CAAV,UAAA,CACA,GAAIF,KAAK,CAALA,UAAAA,CAAJ,CAAA,CAA0B,CACxBE,GAAG,CAAHA,kBAAAA,CAAyBF,KAAK,CAA9BE,UAAAA,CADF,CAAA,IAEO,CACLA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,UAAAA,CACD,CACF,CAED,GAAIF,KAAK,CAALA,aAAAA,GAAJ,SAAA,CAAuC,CACrC,MAAOE,CAAAA,GAAG,CAAV,aAAA,CACA,GAAID,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAvB,aAAIC,CAAJ,CAAwC,CACtCC,GAAG,CAAHA,kBAAAA,CAAyBF,KAAK,CAALA,aAAAA,CAAzBE,CAAyBF,CAAzBE,CACAA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAALA,aAAAA,CAAvBE,CAAuBF,CAAvBE,CAFF,CAAA,IAGO,IAAIF,KAAK,CAALA,aAAAA,CAAJ,CAAA,CAA6B,CAClCE,GAAG,CAAHA,kBAAAA,CAAyBF,KAAK,CAA9BE,aAAAA,CADK,CAAA,IAEA,CACLA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,aAAAA,CACD,CACF,CAED,GAAIF,KAAK,CAALA,aAAAA,GAAJ,SAAA,CAAuC,CACrC,MAAOE,CAAAA,GAAG,CAAV,aAAA,CACA,GAAID,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAvB,aAAIC,CAAJ,CAAwC,CACtCC,GAAG,CAAHA,kBAAAA,CAAyBF,KAAK,CAALA,aAAAA,CAAzBE,CAAyBF,CAAzBE,CACAA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAALA,aAAAA,CAAvBE,CAAuBF,CAAvBE,CAFF,CAAA,IAGO,IAAIF,KAAK,CAALA,aAAAA,CAAJ,CAAA,CAA6B,CAClCE,GAAG,CAAHA,kBAAAA,CAAyBF,KAAK,CAA9BE,aAAAA,CADK,CAAA,IAEA,CACLA,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,aAAAA,CACD,CACF,CAED,GAAIF,KAAK,CAALA,WAAAA,GAAJ,SAAA,CAAqC,CACnC,MAAOE,CAAAA,GAAG,CAAV,WAAA,CACA,GAAID,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAvB,WAAIC,CAAJ,CAAsC,CACpCC,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAALA,WAAAA,CAAvBE,CAAuBF,CAAvBE,CACAA,GAAG,CAAHA,cAAAA,CAAqBF,KAAK,CAALA,WAAAA,CAArBE,CAAqBF,CAArBE,CAFF,CAAA,IAGO,IAAIF,KAAK,CAALA,WAAAA,CAAJ,CAAA,CAA2B,CAChCE,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,WAAAA,CADK,CAAA,IAEA,CACLA,GAAG,CAAHA,cAAAA,CAAqBF,KAAK,CAA1BE,WAAAA,CACD,CACF,CAED,GAAIF,KAAK,CAALA,WAAAA,GAAJ,SAAA,CAAqC,CACnC,MAAOE,CAAAA,GAAG,CAAV,WAAA,CACA,GAAID,KAAK,CAALA,OAAAA,CAAcD,KAAK,CAAvB,WAAIC,CAAJ,CAAsC,CACpCC,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAALA,WAAAA,CAAvBE,CAAuBF,CAAvBE,CACAA,GAAG,CAAHA,cAAAA,CAAqBF,KAAK,CAALA,WAAAA,CAArBE,CAAqBF,CAArBE,CAFF,CAAA,IAGO,IAAIF,KAAK,CAALA,WAAAA,CAAJ,CAAA,CAA2B,CAChCE,GAAG,CAAHA,gBAAAA,CAAuBF,KAAK,CAA5BE,WAAAA,CADK,CAAA,IAEA,CACLA,GAAG,CAAHA,cAAAA,CAAqBF,KAAK,CAA1BE,WAAAA,CACD,CACF,CAED,MAAA,CAAA,GAAA,CACD,CAED,QAAA,CAAA,cAAA,CAAA,KAAA,CAAuD,CACrD,GAAA,OAAA,CAAa,CACXC,8BAA8B,CAA9BA,KAA8B,CAA9BA,CACD,CACD,MAAOC,CAAAA,+BAA+B,CAAtC,KAAsC,CAAtC,CACD,CA2CD,MAAO,IAAMC,CAAAA,iBAAiB,CAAGjB,aAAa,CAG5C,CACAC,IAAI,CADJ,mBAAA,CAEAC,YAAY,WAAE,SAAF,EAAE,eAAF,CAAE,eAAF,CAAE,aAAF,CAAE,aAAF,CAAE,SAAF,CAAE,aAAF,CAAE,cAAF,CAAE,cAAF,CAAE,aAAF,CAAE,aAAF,CAAE,YAAF,CAFZ,gCAEY,EAFZ,CAiBAC,MAAM,CAjBN,EAAA,CAkBAe,cAAc,CAlBd,cAAA,CAmBAC,iBAAiB,CAAE,CAAA,oBAAA,CAAA,kBAAA,CAAA,oBAAA,CAAA,kBAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,kBAAA,CAAA,gBAAA,CAnBnB,CAH4C,CAAvC,CA8CP,MAAO,IAAMC,CAAAA,mBAAmB,CAAGpB,aAAa,CAG9C,CACAC,IAAI,CADJ,qBAAA,CAEAC,YAAY,CAFZ,SAAA,CAGAC,MAAM,CAAE,EAHR,CAH8C,CAAzC,CAqBP,MAAO,IAAMkB,CAAAA,sBAAsB,CAAGrB,aAAa,CAGjD,CACAC,IAAI,CADJ,wBAAA,CAEAC,YAAY,CAFZ,SAAA,CAGAC,MAAM,CAAE,EAHR,CAHiD,CAA5C","sourcesContent":["// Previous types exported gesture handlers as classes which creates an interface and variable, both named the same as class.\n// Without those types, we'd introduce breaking change, forcing users to prefix every handler type specification with typeof\n// e.g. React.createRef<TapGestureHandler> -> React.createRef<typeof TapGestureHandler>.\n// See https://www.typescriptlang.org/docs/handbook/classes.html#constructor-functions for reference.\nimport * as React from 'react';\n\nimport createHandler from './createHandler';\nimport PlatformConstants from '../PlatformConstants';\nimport { State } from '../State';\nimport { ValueOf } from '../typeUtils';\n\nexport interface GestureEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n}\n\nexport interface HandlerStateChangeEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n  oldState: ValueOf<typeof State>;\n}\n\n//TODO(TS) events in handlers\n\nexport interface GestureEvent<ExtraEventPayloadT = Record<string, unknown>> {\n  nativeEvent: Readonly<GestureEventPayload & ExtraEventPayloadT>;\n}\nexport interface HandlerStateChangeEvent<\n  ExtraEventPayloadT = Record<string, unknown>\n> {\n  nativeEvent: Readonly<HandlerStateChangeEventPayload & ExtraEventPayloadT>;\n}\n\n// Events payloads are types instead of interfaces due to TS limitation.\n// See https://github.com/microsoft/TypeScript/issues/15300 for more info.\nexport type BaseGestureHandlerProps<\n  ExtraEventPayloadT extends Record<string, unknown> = Record<string, unknown>\n> = {\n  id?: string;\n  enabled?: boolean;\n  minPointers?: number;\n  waitFor?: React.Ref<unknown> | React.Ref<unknown>[];\n  simultaneousHandlers?: React.Ref<unknown> | React.Ref<unknown>[];\n  shouldCancelWhenOutside?: boolean;\n  hitSlop?:\n    | number\n    // TODO(TS) take into consideration types from GestureHandler#setHitSlop\n    | Partial<\n        Record<\n          'left' | 'right' | 'top' | 'bottom' | 'vertical' | 'horizontal',\n          number\n        >\n      >\n    | Record<'width' | 'left', number>\n    | Record<'width' | 'right', number>\n    | Record<'height' | 'top', number>\n    | Record<'height' | 'bottom', number>;\n  // TODO(TS) - fix event types\n  onBegan?: (event: HandlerStateChangeEvent) => void;\n  onFailed?: (event: HandlerStateChangeEvent) => void;\n  onCancelled?: (event: HandlerStateChangeEvent) => void;\n  onActivated?: (event: HandlerStateChangeEvent) => void;\n  onEnded?: (event: HandlerStateChangeEvent) => void;\n\n  //TODO(TS) consider using NativeSyntheticEvent\n  onGestureEvent?: (event: GestureEvent<ExtraEventPayloadT>) => void;\n  onHandlerStateChange?: (\n    event: HandlerStateChangeEvent<ExtraEventPayloadT>\n  ) => void;\n};\n\nexport const baseProps = [\n  'id',\n  'enabled',\n  'minPointers',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'onGestureEvent',\n  'onHandlerStateChange',\n] as const;\n\nexport type TapGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport interface TapGestureHandlerProps\n  extends BaseGestureHandlerProps<TapGestureHandlerEventPayload> {\n  minPointers?: number;\n  maxDurationMs?: number;\n  maxDelayMs?: number;\n  numberOfTaps?: number;\n  maxDeltaX?: number;\n  maxDeltaY?: number;\n  maxDist?: number;\n}\n\nexport type TapGestureHandler = typeof TapGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const TapGestureHandler = createHandler<\n  TapGestureHandlerProps,\n  TapGestureHandlerEventPayload\n>({\n  name: 'TapGestureHandler',\n  allowedProps: [\n    ...baseProps,\n    'maxDurationMs',\n    'maxDelayMs',\n    'numberOfTaps',\n    'maxDeltaX',\n    'maxDeltaY',\n    'maxDist',\n    'minPointers',\n  ] as const,\n  config: {},\n});\n\nexport type FlingGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload> {\n  direction?: number;\n  numberOfPointers?: number;\n}\n\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: 'FlingGestureHandler',\n  allowedProps: [...baseProps, 'numberOfPointers', 'direction'] as const,\n  config: {},\n});\n\nclass ForceTouchFallback extends React.Component {\n  static forceTouchAvailable = false;\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport type ForceTouchGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n  force: number;\n};\n\nexport interface ForceTouchGestureHandlerProps\n  extends BaseGestureHandlerProps<ForceTouchGestureHandlerEventPayload> {\n  minForce?: number;\n  maxForce?: number;\n  feedbackOnActivation?: boolean;\n}\n\nexport type ForceTouchGestureHandler = typeof ForceTouchGestureHandler & {\n  forceTouchAvailable: boolean;\n};\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const ForceTouchGestureHandler = PlatformConstants?.forceTouchAvailable\n  ? createHandler<\n      ForceTouchGestureHandlerProps,\n      ForceTouchGestureHandlerEventPayload\n    >({\n      name: 'ForceTouchGestureHandler',\n      allowedProps: [\n        ...baseProps,\n        'minForce',\n        'maxForce',\n        'feedbackOnActivation',\n      ] as const,\n      config: {},\n    })\n  : ForceTouchFallback;\n\n(ForceTouchGestureHandler as ForceTouchGestureHandler).forceTouchAvailable =\n  PlatformConstants?.forceTouchAvailable || false;\n\nexport type LongPressGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload> {\n  minDurationMs?: number;\n  maxDist?: number;\n}\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: 'LongPressGestureHandler',\n  allowedProps: [...baseProps, 'minDurationMs', 'maxDist'] as const,\n  config: {},\n});\n\nfunction validatePanGestureHandlerProps(props: PanGestureHandlerProps) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props: PanGestureHandlerProps) {\n  type InternalPanGHKeys =\n    | 'activeOffsetXStart'\n    | 'activeOffsetXEnd'\n    | 'failOffsetXStart'\n    | 'failOffsetXEnd'\n    | 'activeOffsetYStart'\n    | 'activeOffsetYEnd'\n    | 'failOffsetYStart'\n    | 'failOffsetYEnd';\n  type PanGestureHandlerInternalProps = PanGestureHandlerProps &\n    Partial<Record<InternalPanGHKeys, number>>;\n\n  const res: PanGestureHandlerInternalProps = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res.minDeltaX;\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res.maxDeltaX;\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res.minOffsetX;\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res.minDeltaY;\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res.maxDeltaY;\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res.minOffsetY;\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props: PanGestureHandlerProps) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport type PanGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n  translationX: number;\n  translationY: number;\n  velocityX: number;\n  velocityY: number;\n};\n\nexport interface PanGestureHandlerProps\n  extends BaseGestureHandlerProps<PanGestureHandlerEventPayload> {\n  /** @deprecated  use activeOffsetX*/\n  minDeltaX?: number;\n  /** @deprecated  use activeOffsetY*/\n  minDeltaY?: number;\n  /** @deprecated  use failOffsetX*/\n  maxDeltaX?: number;\n  /** @deprecated  use failOffsetY*/\n  maxDeltaY?: number;\n  /** @deprecated  use activeOffsetX*/\n  minOffsetX?: number;\n  /** @deprecated  use failOffsetY*/\n  minOffsetY?: number;\n  activeOffsetY?: number | number[];\n  activeOffsetX?: number | number[];\n  failOffsetY?: number | number[];\n  failOffsetX?: number | number[];\n  minDist?: number;\n  minVelocity?: number;\n  minVelocityX?: number;\n  minVelocityY?: number;\n  minPointers?: number;\n  maxPointers?: number;\n  avgTouches?: boolean;\n  enableTrackpadTwoFingerGesture?: boolean;\n}\n\nexport type PanGestureHandler = typeof PanGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const PanGestureHandler = createHandler<\n  PanGestureHandlerProps,\n  PanGestureHandlerEventPayload\n>({\n  name: 'PanGestureHandler',\n  allowedProps: [\n    ...baseProps,\n    'activeOffsetY',\n    'activeOffsetX',\n    'failOffsetY',\n    'failOffsetX',\n    'minDist',\n    'minVelocity',\n    'minVelocityX',\n    'minVelocityY',\n    'minPointers',\n    'maxPointers',\n    'avgTouches',\n    'enableTrackpadTwoFingerGesture',\n  ] as const,\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: [\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'failOffsetYStart',\n    'failOffsetYEnd',\n    'failOffsetXStart',\n    'failOffsetXEnd',\n  ],\n});\n\nexport type PinchGestureHandlerEventPayload = {\n  scale: number;\n  focalX: number;\n  focalY: number;\n  velocity: number;\n};\n\nexport interface PinchGestureHandlerProps\n  extends BaseGestureHandlerProps<PinchGestureHandlerEventPayload> {}\n\nexport type PinchGestureHandler = typeof PinchGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const PinchGestureHandler = createHandler<\n  PinchGestureHandlerProps,\n  PinchGestureHandlerEventPayload\n>({\n  name: 'PinchGestureHandler',\n  allowedProps: baseProps,\n  config: {},\n});\n\nexport type RotationGestureHandlerEventPayload = {\n  rotation: number;\n  anchorX: number;\n  anchorY: number;\n  velocity: number;\n};\n\nexport interface RotationGestureHandlerProps\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload> {}\n\nexport type RotationGestureHandler = typeof RotationGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const RotationGestureHandler = createHandler<\n  RotationGestureHandlerProps,\n  RotationGestureHandlerEventPayload\n>({\n  name: 'RotationGestureHandler',\n  allowedProps: baseProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"module"}