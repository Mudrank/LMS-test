{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mudrank Gupta\\\\OneDrive\\\\WHJR\\\\Pro\\\\Wireless-Library-management\\\\Screens\\\\Transaction.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\n\nvar Transaction = function (_React$Component) {\n  _inherits(Transaction, _React$Component);\n\n  var _super = _createSuper(Transaction);\n\n  function Transaction() {\n    var _this;\n\n    _classCallCheck(this, Transaction);\n\n    _this = _super.call(this);\n\n    _this.getCamPermissions = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasPermission: status\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasPermission: null,\n      scanned: false,\n      scannedData: \" \",\n      btnState: \"normal\"\n    };\n    return _this;\n  }\n\n  _createClass(Transaction, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"IN Transaction\"), React.createElement(TouchableOpacity, {\n        onPress: this.getCamPermissions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"Scan Qrcode\")));\n    }\n  }]);\n\n  return Transaction;\n}(React.Component);\n\nexport { Transaction as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#58355E\"\n  },\n  text: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"#FFF689\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/Wireless-Library-management/Screens/Transaction.js"],"names":["React","Permissions","BarCodeScanner","Transaction","getCamPermissions","askAsync","CAMERA","status","setState","hasPermission","state","scanned","scannedData","btnState","styles","container","text","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","color"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;IAEqBC,W;;;;;AACnB,yBAAc;AAAA;;AAAA;;AACZ;;AADY,UAUhBC,iBAVgB,GAUI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKH,WAAW,CAACI,QAAZ,CAAqBJ,WAAW,CAACK,MAAjC,CADL;;AAAA;AAAA;AACZC,cAAAA,MADY,yBACZA,MADY;;AAEpB,oBAAKC,QAAL,CAAc;AACZC,gBAAAA,aAAa,EAAEF;AADH,eAAd;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ;;AAEZ,UAAKG,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE,IADJ;AAEXE,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,WAAW,EAAE,GAHF;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAFY;AAQb;;;;WASD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKZ,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFF,CADF;AAQD;;;;EA3BsCJ,KAAK,CAACiB,S;;SAA1Bd,W;AA8BrB,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTF,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/BL,EAAAA,IAAI,EAAE;AACJQ,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,KAAK,EAAE;AAHH;AARyB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\n\r\nexport default class Transaction extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasPermission: null,\r\n      scanned: false,\r\n      scannedData: \" \",\r\n      btnState: \"normal\",\r\n    };\r\n  }\r\n\r\ngetCamPermissions = async() =>{\r\nconst { status } = await Permissions.askAsync(Permissions.CAMERA)\r\nthis.setState({\r\n  hasPermission: status\r\n})\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>IN Transaction</Text>\r\n        <TouchableOpacity onPress={this.getCamPermissions}>\r\n          <Text>Scan Qrcode</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#58355E\",\r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#FFF689\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}