{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{Platform}from'@unimodules/core';import CameraManager from\"../ExponentCameraManager\";export var ConversionTables={type:CameraManager.Type,flashMode:CameraManager.FlashMode,autoFocus:CameraManager.AutoFocus,whiteBalance:CameraManager.WhiteBalance};export function convertNativeProps(props){if(!props||typeof props!=='object'){return{};}var nativeProps={};for(var _i=0,_Object$entries=Object.entries(props);_i<_Object$entries.length;_i++){var _ref=_Object$entries[_i];var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var value=_ref2[1];if(typeof value==='string'&&ConversionTables[key]){nativeProps[key]=ConversionTables[key][value];}else{nativeProps[key]=value;}}return nativeProps;}export function ensureNativeProps(props){var newProps=convertNativeProps(props);if(newProps.onBarCodeScanned){newProps.barCodeScannerEnabled=true;}if(newProps.onFacesDetected){newProps.faceDetectorEnabled=true;}if(Platform.OS!=='android'){delete newProps.ratio;delete newProps.useCamera2Api;}if(Platform.OS!=='web'){delete newProps.poster;}return newProps;}","map":{"version":3,"sources":["../../src/utils/props.ts"],"names":[],"mappings":"iEAAA,OAAS,QAAT,KAAyB,kBAAzB,CAUA,MAAO,CAAA,aAAP,gCAGA,MAAO,IAAM,CAAA,gBAAgB,CAKzB,CACF,IAAI,CAAE,aAAa,CAAC,IADlB,CAEF,SAAS,CAAE,aAAa,CAAC,SAFvB,CAGF,SAAS,CAAE,aAAa,CAAC,SAHvB,CAIF,YAAY,CAAE,aAAa,CAAC,YAJ1B,CALG,CAYP,MAAM,SAAU,CAAA,kBAAV,CAA6B,KAA7B,CAAgD,CACpD,GAAI,CAAC,KAAD,EAAU,MAAO,CAAA,KAAP,GAAiB,QAA/B,CAAyC,CACvC,MAAO,EAAP,CACD,CAED,GAAM,CAAA,WAAW,CAAsB,EAAvC,CAEA,6BAA2B,MAAM,CAAC,OAAP,CAAe,KAAf,CAA3B,gCAAkD,kEAAtC,CAAA,GAAsC,aAAjC,CAAA,KAAiC,UAChD,GAAI,MAAO,CAAA,KAAP,GAAiB,QAAjB,EAA6B,gBAAgB,CAAC,GAAD,CAAjD,CAAwD,CACtD,WAAW,CAAC,GAAD,CAAX,CAAmB,gBAAgB,CAAC,GAAD,CAAhB,CAAsB,KAAtB,CAAnB,CACD,CAFD,IAEO,CACL,WAAW,CAAC,GAAD,CAAX,CAAmB,KAAnB,CACD,CACF,CAED,MAAO,CAAA,WAAP,CACD,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,KAA5B,CAA+C,CACnD,GAAM,CAAA,QAAQ,CAAG,kBAAkB,CAAC,KAAD,CAAnC,CAEA,GAAI,QAAQ,CAAC,gBAAb,CAA+B,CAC7B,QAAQ,CAAC,qBAAT,CAAiC,IAAjC,CACD,CAED,GAAI,QAAQ,CAAC,eAAb,CAA8B,CAC5B,QAAQ,CAAC,mBAAT,CAA+B,IAA/B,CACD,CAED,GAAI,QAAQ,CAAC,EAAT,GAAgB,SAApB,CAA+B,CAC7B,MAAO,CAAA,QAAQ,CAAC,KAAhB,CACA,MAAO,CAAA,QAAQ,CAAC,aAAhB,CACD,CAED,GAAI,QAAQ,CAAC,EAAT,GAAgB,KAApB,CAA2B,CACzB,MAAO,CAAA,QAAQ,CAAC,MAAhB,CACD,CAED,MAAO,CAAA,QAAP,CACD","sourcesContent":["import { Platform } from '@unimodules/core';\n\nimport {\n  CameraNativeProps,\n  CameraType,\n  FlashMode,\n  AutoFocus,\n  WhiteBalance,\n  CameraProps,\n} from '../Camera.types';\nimport CameraManager from '../ExponentCameraManager';\n\n// Values under keys from this object will be transformed to native options\nexport const ConversionTables: {\n  type: Record<keyof typeof CameraType, CameraNativeProps['type']>;\n  flashMode: Record<keyof typeof FlashMode, CameraNativeProps['flashMode']>;\n  autoFocus: Record<keyof typeof AutoFocus, CameraNativeProps['autoFocus']>;\n  whiteBalance: Record<keyof typeof WhiteBalance, CameraNativeProps['whiteBalance']>;\n} = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n};\n\nexport function convertNativeProps(props?: CameraProps): CameraNativeProps {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  const nativeProps: CameraNativeProps = {};\n\n  for (const [key, value] of Object.entries(props)) {\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n\n  return nativeProps;\n}\n\nexport function ensureNativeProps(props?: CameraProps): CameraNativeProps {\n  const newProps = convertNativeProps(props);\n\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}