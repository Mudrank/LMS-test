{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mudrank Gupta\\\\OneDrive\\\\WHJR\\\\Pro\\\\Wireless-Library-management\\\\App.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Search from \"./Screens/SearchScreen\";\nimport Transaction from \"./Screens/Transaction\";\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Icon from \"@expo/vector-icons/dist/FontAwesome\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 1\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar TabNavigator = createBottomTabNavigator({\n  Transaction: {\n    screen: Transaction\n  },\n  Search: {\n    screen: Search\n  }\n}, {\n  navigationOptions: function navigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            tintColor = _ref2.tintColor;\n        var routeName = navigation.state.routeName;\n        var iconName;\n\n        if (routeName === 'Home') {\n          iconName = \"ios-information-circle\" + (focused ? '' : '-outline');\n        } else if (routeName === 'Settings') {\n          iconName = \"ios-options\" + (focused ? '' : '-outline');\n        }\n\n        return React.createElement(Ionicons, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray'\n  },\n  tabBarComponent: TabBarBottom,\n  tabBarPosition: 'bottom',\n  animationEnabled: false,\n  swipeEnabled: false\n});\nvar AppContainer = createAppContainer(TabNavigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#58355E'\n  },\n  text: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#FFF689'\n  }\n});","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/Wireless-Library-management/App.js"],"names":["React","Search","Transaction","createAppContainer","createBottomTabNavigator","Icon","App","Component","TabNavigator","screen","navigationOptions","navigation","tabBarIcon","focused","tintColor","routeName","state","iconName","tabBarOptions","activeTintColor","inactiveTintColor","tabBarComponent","TabBarBottom","tabBarPosition","animationEnabled","swipeEnabled","AppContainer","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","text","fontSize","fontWeight","color"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAIA,OAAOC,MAAP;AACA,OAAOC,WAAP;AAGC,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAAQC,wBAAR,QAAuC,uBAAvC;AAGD,OAAOC,IAAP;;IAEqBC,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACJ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;AAGH;;;;EALgCN,KAAK,CAACO,S;;SAAlBD,G;AAQrB,IAAME,YAAY,GAAIJ,wBAAwB,CAAC;AAC7CF,EAAAA,WAAW,EAAE;AAAEO,IAAAA,MAAM,EAAEP;AAAV,GADgC;AAE7CD,EAAAA,MAAM,EAAE;AAAEQ,IAAAA,MAAM,EAAER;AAAV;AAFqC,CAAD,EAI9C;AACES,EAAAA,iBAAiB,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAAqB;AACtCC,MAAAA,UAAU,EAAE,2BAA4B;AAAA,YAAzBC,OAAyB,SAAzBA,OAAyB;AAAA,YAAhBC,SAAgB,SAAhBA,SAAgB;AAAA,YAC9BC,SAD8B,GAChBJ,UAAU,CAACK,KADK,CAC9BD,SAD8B;AAEtC,YAAIE,QAAJ;;AACA,YAAIF,SAAS,KAAK,MAAlB,EAA0B;AACxBE,UAAAA,QAAQ,+BAA4BJ,OAAO,GAAG,EAAH,GAAQ,UAA3C,CAAR;AACD,SAFD,MAEO,IAAIE,SAAS,KAAK,UAAlB,EAA8B;AACnCE,UAAAA,QAAQ,oBAAiBJ,OAAO,GAAG,EAAH,GAAQ,UAAhC,CAAR;AACD;;AAID,eAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEI,QAAhB;AAA0B,UAAA,IAAI,EAAE,EAAhC;AAAoC,UAAA,KAAK,EAAEH,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAbqC,KAArB;AAAA,GADrB;AAgBEI,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,QADJ;AAEbC,IAAAA,iBAAiB,EAAE;AAFN,GAhBjB;AAoBEC,EAAAA,eAAe,EAAEC,YApBnB;AAqBEC,EAAAA,cAAc,EAAE,QArBlB;AAsBEC,EAAAA,gBAAgB,EAAE,KAtBpB;AAuBEC,EAAAA,YAAY,EAAE;AAvBhB,CAJ8C,CAA9C;AA+BA,IAAMC,YAAY,GAAGvB,kBAAkB,CAACK,YAAD,CAAvC;AAEA,IAAMmB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTF,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/BG,EAAAA,IAAI,EAAC;AACHC,IAAAA,QAAQ,EAAC,EADN;AAEHC,IAAAA,UAAU,EAAE,MAFT;AAGHC,IAAAA,KAAK,EAAE;AAHJ;AAR0B,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\n//importing screens\nimport Search from './Screens/SearchScreen';\nimport Transaction from './Screens/Transaction'\n\n//import navigation\n import { createAppContainer } from 'react-navigation';\n import {createBottomTabNavigator} from 'react-navigation-tabs'\n\n//icon \nimport Icon from 'react-native-vector-icons/dist/FontAwesome';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n<AppContainer/>\n  );\n}\n}\n\nconst TabNavigator  = createBottomTabNavigator({\n  Transaction: { screen: Transaction},\n  Search: { screen: Search},\n},\n{\n  navigationOptions: ({ navigation }) => ({\n    tabBarIcon: ({ focused, tintColor }) => {\n      const { routeName } = navigation.state;\n      let iconName;\n      if (routeName === 'Home') {\n        iconName = `ios-information-circle${focused ? '' : '-outline'}`;\n      } else if (routeName === 'Settings') {\n        iconName = `ios-options${focused ? '' : '-outline'}`;\n      }\n\n      // You can return any component that you like here! We usually use an\n      // icon component from react-native-vector-icons\n      return <Ionicons name={iconName} size={25} color={tintColor} />;\n    },\n  }),\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray',\n  },\n  tabBarComponent: TabBarBottom,\n  tabBarPosition: 'bottom',\n  animationEnabled: false,\n  swipeEnabled: false,\n}\n)\n\nconst AppContainer = createAppContainer(TabNavigator)\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#58355E'\n  },\n  text:{\n    fontSize:30,\n    fontWeight: 'bold',\n    color: '#FFF689'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}