{"ast":null,"code":"import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";export function getTag(view){return findNodeHandle(view);}export function measure(animatedRef){'worklet';if(!_WORKLET){throw new Error('(measure) method cannot be used on RN side!');}var viewTag=animatedRef();var result=_measure(viewTag);if(result.x===-1234567){throw new Error(\"The view with tag \"+viewTag+\" could not be measured\");}return result;}export function scrollTo(animatedRef,x,y,animated){'worklet';if(!_WORKLET){return;}var viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);}","map":{"version":3,"sources":["C:/Users/Mudrank Gupta/OneDrive/WHJR/Pro/Wireless-Library-management/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"names":["getTag","view","findNodeHandle","measure","animatedRef","_WORKLET","Error","viewTag","result","_measure","x","scrollTo","y","animated","_scrollTo"],"mappings":"yEAIA,MAAO,SAASA,CAAAA,MAAT,CAAgBC,IAAhB,CAAsB,CACzB,MAAOC,CAAAA,cAAc,CAACD,IAAD,CAArB,CACH,CAUD,MAAO,SAASE,CAAAA,OAAT,CAAiBC,WAAjB,CAA8B,CACjC,UACA,GAAI,CAACC,QAAL,CAAe,CACX,KAAM,IAAIC,CAAAA,KAAJ,CAAU,6CAAV,CAAN,CACH,CACD,GAAMC,CAAAA,OAAO,CAAGH,WAAW,EAA3B,CACA,GAAMI,CAAAA,MAAM,CAAGC,QAAQ,CAACF,OAAD,CAAvB,CACA,GAAIC,MAAM,CAACE,CAAP,GAAa,CAAC,OAAlB,CAA2B,CACvB,KAAM,IAAIJ,CAAAA,KAAJ,sBAA+BC,OAA/B,0BAAN,CACH,CACD,MAAOC,CAAAA,MAAP,CACH,CACD,MAAO,SAASG,CAAAA,QAAT,CAAkBP,WAAlB,CAA+BM,CAA/B,CAAkCE,CAAlC,CAAqCC,QAArC,CAA+C,CAClD,UACA,GAAI,CAACR,QAAL,CAAe,CACX,OACH,CACD,GAAME,CAAAA,OAAO,CAAGH,WAAW,EAA3B,CACAU,SAAS,CAACP,OAAD,CAAUG,CAAV,CAAaE,CAAb,CAAgBC,QAAhB,CAAT,CACH","sourcesContent":["/* global _WORKLET _measure _scrollTo */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { findNodeHandle } from 'react-native';\nexport function getTag(view) {\n    return findNodeHandle(view);\n}\n/**\n * fields that can be accessed:\n *  x\n *  y\n *  width\n *  height\n *  pageX\n *  pageY\n */\nexport function measure(animatedRef) {\n    'worklet';\n    if (!_WORKLET) {\n        throw new Error('(measure) method cannot be used on RN side!');\n    }\n    const viewTag = animatedRef();\n    const result = _measure(viewTag);\n    if (result.x === -1234567) {\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\n    }\n    return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n    'worklet';\n    if (!_WORKLET) {\n        return;\n    }\n    const viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n}\n"]},"metadata":{},"sourceType":"module"}